// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _reshape_HH_
#define _reshape_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct reshape : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > input_V_address0;
    sc_out< sc_logic > input_V_ce0;
    sc_in< sc_lv<14> > input_V_q0;
    sc_out< sc_lv<10> > output_V_address0;
    sc_out< sc_logic > output_V_ce0;
    sc_out< sc_logic > output_V_we0;
    sc_out< sc_lv<14> > output_V_d0;


    // Module declarations
    reshape(sc_module_name name);
    SC_HAS_PROCESS(reshape);

    ~reshape();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<12> > c_cast8_cast_fu_100_p1;
    sc_signal< sc_lv<12> > c_cast8_cast_reg_279;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > c_1_fu_110_p2;
    sc_signal< sc_lv<7> > c_1_reg_287;
    sc_signal< sc_lv<11> > tmp1_cast_fu_138_p1;
    sc_signal< sc_lv<11> > tmp1_cast_reg_292;
    sc_signal< sc_lv<1> > exitcond3_fu_104_p2;
    sc_signal< sc_lv<2> > y_1_fu_152_p2;
    sc_signal< sc_lv<2> > y_1_reg_300;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > tmp_4_fu_198_p2;
    sc_signal< sc_lv<5> > tmp_4_reg_305;
    sc_signal< sc_lv<1> > exitcond2_fu_146_p2;
    sc_signal< sc_lv<5> > tmp_6_fu_204_p2;
    sc_signal< sc_lv<5> > tmp_6_reg_310;
    sc_signal< sc_lv<2> > x_1_fu_220_p2;
    sc_signal< sc_lv<2> > x_1_reg_318;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<12> > o_index_fu_243_p2;
    sc_signal< sc_lv<12> > o_index_reg_323;
    sc_signal< sc_lv<1> > exitcond_fu_214_p2;
    sc_signal< sc_lv<7> > c_reg_63;
    sc_signal< sc_lv<2> > y_reg_74;
    sc_signal< sc_lv<2> > x_reg_85;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_1_fu_266_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_274_p1;
    sc_signal< sc_lv<6> > tmp_fu_116_p1;
    sc_signal< sc_lv<9> > p_shl_fu_120_p3;
    sc_signal< sc_lv<10> > c_cast9_fu_96_p1;
    sc_signal< sc_lv<10> > p_shl_cast_fu_128_p1;
    sc_signal< sc_lv<10> > tmp1_fu_132_p2;
    sc_signal< sc_lv<2> > tmp_2_fu_158_p2;
    sc_signal< sc_lv<4> > p_shl6_fu_168_p3;
    sc_signal< sc_lv<5> > p_shl6_cast_fu_176_p1;
    sc_signal< sc_lv<5> > tmp_2_cast4_fu_164_p1;
    sc_signal< sc_lv<4> > p_shl5_fu_186_p3;
    sc_signal< sc_lv<5> > p_shl5_cast_fu_194_p1;
    sc_signal< sc_lv<5> > y_cast6_fu_142_p1;
    sc_signal< sc_lv<5> > tmp_3_fu_180_p2;
    sc_signal< sc_lv<5> > x_cast3_fu_210_p1;
    sc_signal< sc_lv<5> > tmp_7_fu_226_p2;
    sc_signal< sc_lv<11> > tmp_5_fu_231_p3;
    sc_signal< sc_lv<12> > tmp_8_cast_fu_239_p1;
    sc_signal< sc_lv<5> > tmp2_fu_248_p2;
    sc_signal< sc_lv<11> > tmp2_cast_fu_253_p1;
    sc_signal< sc_lv<11> > i_index_fu_257_p2;
    sc_signal< sc_lv<32> > i_index_cast_fu_262_p1;
    sc_signal< sc_lv<32> > o_index_cast_fu_271_p1;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<6> ap_const_lv6_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_1_fu_110_p2();
    void thread_c_cast8_cast_fu_100_p1();
    void thread_c_cast9_fu_96_p1();
    void thread_exitcond2_fu_146_p2();
    void thread_exitcond3_fu_104_p2();
    void thread_exitcond_fu_214_p2();
    void thread_i_index_cast_fu_262_p1();
    void thread_i_index_fu_257_p2();
    void thread_input_V_address0();
    void thread_input_V_ce0();
    void thread_o_index_cast_fu_271_p1();
    void thread_o_index_fu_243_p2();
    void thread_output_V_address0();
    void thread_output_V_ce0();
    void thread_output_V_d0();
    void thread_output_V_we0();
    void thread_p_shl5_cast_fu_194_p1();
    void thread_p_shl5_fu_186_p3();
    void thread_p_shl6_cast_fu_176_p1();
    void thread_p_shl6_fu_168_p3();
    void thread_p_shl_cast_fu_128_p1();
    void thread_p_shl_fu_120_p3();
    void thread_tmp1_cast_fu_138_p1();
    void thread_tmp1_fu_132_p2();
    void thread_tmp2_cast_fu_253_p1();
    void thread_tmp2_fu_248_p2();
    void thread_tmp_1_fu_266_p1();
    void thread_tmp_2_cast4_fu_164_p1();
    void thread_tmp_2_fu_158_p2();
    void thread_tmp_3_fu_180_p2();
    void thread_tmp_4_fu_198_p2();
    void thread_tmp_5_fu_231_p3();
    void thread_tmp_6_fu_204_p2();
    void thread_tmp_7_fu_226_p2();
    void thread_tmp_8_cast_fu_239_p1();
    void thread_tmp_fu_116_p1();
    void thread_tmp_s_fu_274_p1();
    void thread_x_1_fu_220_p2();
    void thread_x_cast3_fu_210_p1();
    void thread_y_1_fu_152_p2();
    void thread_y_cast6_fu_142_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
