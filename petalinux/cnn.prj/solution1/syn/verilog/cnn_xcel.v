// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnn_xcel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [48:0] input_V;
output  [9:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [31:0] output_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_V_ce0;
reg output_V_we0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] i_fu_307_p2;
wire    ap_CS_fsm_state2;
wire   [12:0] next_mul_fu_335_p2;
wire   [0:0] exitcond5_fu_301_p2;
wire   [5:0] idx_urem_fu_370_p3;
wire   [9:0] i_3_fu_384_p2;
reg   [9:0] i_3_reg_626;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_22_fu_390_p1;
reg   [63:0] tmp_22_reg_631;
wire   [0:0] exitcond_fu_378_p2;
wire   [13:0] reshape_output_V_q0;
reg   [13:0] p_Val2_s_reg_641;
wire    ap_CS_fsm_state9;
reg   [0:0] is_neg_reg_648;
wire   [0:0] tmp_23_fu_403_p2;
reg   [0:0] tmp_23_reg_654;
wire    ap_CS_fsm_state10;
wire   [13:0] p_Val2_5_fu_413_p3;
reg   [13:0] p_Val2_5_reg_659;
wire   [31:0] msb_idx_fu_445_p2;
reg   [31:0] msb_idx_reg_665;
wire   [30:0] tmp_65_fu_451_p1;
reg   [30:0] tmp_65_reg_670;
reg   [0:0] tmp_66_reg_675;
wire   [31:0] tmp32_V_3_fu_527_p3;
reg   [31:0] tmp32_V_3_reg_680;
wire    ap_CS_fsm_state11;
wire   [31:0] tmp32_V_6_fu_535_p1;
reg   [31:0] tmp32_V_6_reg_685;
wire    ap_CS_fsm_state17;
wire   [0:0] tmp_29_fu_549_p2;
reg   [0:0] tmp_29_reg_690;
reg   [8:0] mem_conv1_0_V_address0;
reg    mem_conv1_0_V_ce0;
reg    mem_conv1_0_V_we0;
wire   [12:0] mem_conv1_0_V_q0;
reg    mem_conv1_0_V_ce1;
wire   [12:0] mem_conv1_0_V_q1;
reg   [8:0] mem_conv1_1_V_address0;
reg    mem_conv1_1_V_ce0;
reg    mem_conv1_1_V_we0;
wire   [12:0] mem_conv1_1_V_q0;
reg    mem_conv1_1_V_ce1;
wire   [12:0] mem_conv1_1_V_q1;
reg   [8:0] mem_conv1_2_V_address0;
reg    mem_conv1_2_V_ce0;
reg    mem_conv1_2_V_we0;
wire   [12:0] mem_conv1_2_V_q0;
reg    mem_conv1_2_V_ce1;
wire   [12:0] mem_conv1_2_V_q1;
reg   [7:0] mem_conv2_0_V_address0;
reg    mem_conv2_0_V_ce0;
reg    mem_conv2_0_V_we0;
wire   [13:0] mem_conv2_0_V_q0;
reg    mem_conv2_0_V_ce1;
wire   [13:0] mem_conv2_0_V_q1;
reg   [7:0] mem_conv2_1_V_address0;
reg    mem_conv2_1_V_ce0;
reg    mem_conv2_1_V_we0;
wire   [13:0] mem_conv2_1_V_q0;
reg    mem_conv2_1_V_ce1;
wire   [13:0] mem_conv2_1_V_q1;
reg   [7:0] mem_conv2_2_V_address0;
reg    mem_conv2_2_V_ce0;
reg    mem_conv2_2_V_we0;
wire   [13:0] mem_conv2_2_V_q0;
reg    mem_conv2_2_V_ce1;
wire   [13:0] mem_conv2_2_V_q1;
reg   [7:0] mem_conv2_3_V_address0;
reg    mem_conv2_3_V_ce0;
reg    mem_conv2_3_V_we0;
wire   [13:0] mem_conv2_3_V_q0;
reg    mem_conv2_3_V_ce1;
wire   [13:0] mem_conv2_3_V_q1;
reg   [7:0] mem_conv2_4_V_address0;
reg    mem_conv2_4_V_ce0;
reg    mem_conv2_4_V_we0;
wire   [13:0] mem_conv2_4_V_q0;
reg    mem_conv2_4_V_ce1;
wire   [13:0] mem_conv2_4_V_q1;
reg   [9:0] mem_conv3_V_address0;
reg    mem_conv3_V_ce0;
reg    mem_conv3_V_we0;
wire   [13:0] mem_conv3_V_q0;
reg   [9:0] reshape_output_V_address0;
reg    reshape_output_V_ce0;
reg    reshape_output_V_we0;
wire    grp_perform_conv_1_fu_258_ap_start;
wire    grp_perform_conv_1_fu_258_ap_done;
wire    grp_perform_conv_1_fu_258_ap_idle;
wire    grp_perform_conv_1_fu_258_ap_ready;
wire   [8:0] grp_perform_conv_1_fu_258_input_V_address0;
wire    grp_perform_conv_1_fu_258_input_V_ce0;
wire   [8:0] grp_perform_conv_1_fu_258_input_V_address1;
wire    grp_perform_conv_1_fu_258_input_V_ce1;
wire   [8:0] grp_perform_conv_1_fu_258_input_V1_address0;
wire    grp_perform_conv_1_fu_258_input_V1_ce0;
wire   [8:0] grp_perform_conv_1_fu_258_input_V1_address1;
wire    grp_perform_conv_1_fu_258_input_V1_ce1;
wire   [8:0] grp_perform_conv_1_fu_258_input_V2_address0;
wire    grp_perform_conv_1_fu_258_input_V2_ce0;
wire   [8:0] grp_perform_conv_1_fu_258_input_V2_address1;
wire    grp_perform_conv_1_fu_258_input_V2_ce1;
wire   [7:0] grp_perform_conv_1_fu_258_output_V_address0;
wire    grp_perform_conv_1_fu_258_output_V_ce0;
wire    grp_perform_conv_1_fu_258_output_V_we0;
wire   [13:0] grp_perform_conv_1_fu_258_output_V_d0;
wire   [7:0] grp_perform_conv_1_fu_258_output_V3_address0;
wire    grp_perform_conv_1_fu_258_output_V3_ce0;
wire    grp_perform_conv_1_fu_258_output_V3_we0;
wire   [13:0] grp_perform_conv_1_fu_258_output_V3_d0;
wire   [7:0] grp_perform_conv_1_fu_258_output_V4_address0;
wire    grp_perform_conv_1_fu_258_output_V4_ce0;
wire    grp_perform_conv_1_fu_258_output_V4_we0;
wire   [13:0] grp_perform_conv_1_fu_258_output_V4_d0;
wire   [7:0] grp_perform_conv_1_fu_258_output_V5_address0;
wire    grp_perform_conv_1_fu_258_output_V5_ce0;
wire    grp_perform_conv_1_fu_258_output_V5_we0;
wire   [13:0] grp_perform_conv_1_fu_258_output_V5_d0;
wire   [7:0] grp_perform_conv_1_fu_258_output_V6_address0;
wire    grp_perform_conv_1_fu_258_output_V6_ce0;
wire    grp_perform_conv_1_fu_258_output_V6_we0;
wire   [13:0] grp_perform_conv_1_fu_258_output_V6_d0;
wire    grp_perform_conv_fu_274_ap_start;
wire    grp_perform_conv_fu_274_ap_done;
wire    grp_perform_conv_fu_274_ap_idle;
wire    grp_perform_conv_fu_274_ap_ready;
wire   [7:0] grp_perform_conv_fu_274_input_0_V_address0;
wire    grp_perform_conv_fu_274_input_0_V_ce0;
wire   [7:0] grp_perform_conv_fu_274_input_0_V_address1;
wire    grp_perform_conv_fu_274_input_0_V_ce1;
wire   [7:0] grp_perform_conv_fu_274_input_1_V_address0;
wire    grp_perform_conv_fu_274_input_1_V_ce0;
wire   [7:0] grp_perform_conv_fu_274_input_1_V_address1;
wire    grp_perform_conv_fu_274_input_1_V_ce1;
wire   [7:0] grp_perform_conv_fu_274_input_2_V_address0;
wire    grp_perform_conv_fu_274_input_2_V_ce0;
wire   [7:0] grp_perform_conv_fu_274_input_2_V_address1;
wire    grp_perform_conv_fu_274_input_2_V_ce1;
wire   [7:0] grp_perform_conv_fu_274_input_3_V_address0;
wire    grp_perform_conv_fu_274_input_3_V_ce0;
wire   [7:0] grp_perform_conv_fu_274_input_3_V_address1;
wire    grp_perform_conv_fu_274_input_3_V_ce1;
wire   [7:0] grp_perform_conv_fu_274_input_4_V_address0;
wire    grp_perform_conv_fu_274_input_4_V_ce0;
wire   [7:0] grp_perform_conv_fu_274_input_4_V_address1;
wire    grp_perform_conv_fu_274_input_4_V_ce1;
wire   [9:0] grp_perform_conv_fu_274_output_V_address0;
wire    grp_perform_conv_fu_274_output_V_ce0;
wire    grp_perform_conv_fu_274_output_V_we0;
wire   [13:0] grp_perform_conv_fu_274_output_V_d0;
wire    grp_reshape_fu_288_ap_start;
wire    grp_reshape_fu_288_ap_done;
wire    grp_reshape_fu_288_ap_idle;
wire    grp_reshape_fu_288_ap_ready;
wire   [9:0] grp_reshape_fu_288_input_V_address0;
wire    grp_reshape_fu_288_input_V_ce0;
wire   [9:0] grp_reshape_fu_288_output_V_address0;
wire    grp_reshape_fu_288_output_V_ce0;
wire    grp_reshape_fu_288_output_V_we0;
wire   [13:0] grp_reshape_fu_288_output_V_d0;
reg   [5:0] bvh_d_index_reg_214;
reg   [12:0] phi_mul_reg_225;
reg   [5:0] phi_urem_reg_236;
reg   [9:0] i4_reg_247;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state18;
reg    grp_perform_conv_1_fu_258_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    grp_perform_conv_fu_274_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_reshape_fu_288_ap_start_reg;
wire    ap_CS_fsm_state6;
wire   [63:0] newIndex1_fu_351_p1;
wire   [2:0] tmp_62_fu_331_p1;
wire   [12:0] tmp_s_fu_320_p3;
wire    ap_CS_fsm_state12;
wire   [31:0] index_assign_cast3_fu_297_p1;
wire   [0:0] tmp_fu_313_p3;
wire   [4:0] tmp_63_fu_341_p4;
wire   [5:0] next_urem_fu_358_p2;
wire   [0:0] tmp_73_fu_364_p2;
wire   [13:0] tmp_24_fu_408_p2;
reg   [13:0] p_Result_3_fu_419_p4;
wire   [31:0] p_Result_4_fu_429_p3;
reg   [31:0] num_zeros_fu_437_p3;
wire   [30:0] msb_idx_1_fu_463_p3;
wire   [25:0] tmp_67_fu_473_p4;
wire   [31:0] msb_idx_1_cast_fu_469_p1;
wire   [31:0] tmp32_V_fu_489_p1;
wire   [31:0] tmp_27_fu_492_p2;
wire   [3:0] tmp_68_fu_504_p1;
wire   [3:0] tmp_69_fu_508_p2;
wire   [13:0] tmp_70_fu_514_p1;
wire   [13:0] p_Result_s_fu_518_p2;
wire   [0:0] icmp_fu_483_p2;
wire   [31:0] tmp32_V_1_fu_498_p2;
wire   [31:0] tmp32_V_2_fu_523_p1;
wire   [31:0] grp_fu_294_p1;
wire   [7:0] p_Result_8_fu_539_p4;
wire   [7:0] tmp1_cast_cast_fu_558_p3;
wire   [7:0] tmp_72_fu_555_p1;
wire   [7:0] p_Repl2_2_trunc_fu_565_p2;
wire   [8:0] tmp_31_fu_571_p3;
wire   [31:0] p_Result_5_fu_578_p5;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 grp_perform_conv_1_fu_258_ap_start_reg = 1'b0;
#0 grp_perform_conv_fu_274_ap_start_reg = 1'b0;
#0 grp_reshape_fu_288_ap_start_reg = 1'b0;
end

cnn_xcel_mem_convqcK #(
    .DataWidth( 13 ),
    .AddressRange( 267 ),
    .AddressWidth( 9 ))
mem_conv1_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv1_0_V_address0),
    .ce0(mem_conv1_0_V_ce0),
    .we0(mem_conv1_0_V_we0),
    .d0(tmp_s_fu_320_p3),
    .q0(mem_conv1_0_V_q0),
    .address1(grp_perform_conv_1_fu_258_input_V_address1),
    .ce1(mem_conv1_0_V_ce1),
    .q1(mem_conv1_0_V_q1)
);

cnn_xcel_mem_convqcK #(
    .DataWidth( 13 ),
    .AddressRange( 267 ),
    .AddressWidth( 9 ))
mem_conv1_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv1_1_V_address0),
    .ce0(mem_conv1_1_V_ce0),
    .we0(mem_conv1_1_V_we0),
    .d0(tmp_s_fu_320_p3),
    .q0(mem_conv1_1_V_q0),
    .address1(grp_perform_conv_1_fu_258_input_V1_address1),
    .ce1(mem_conv1_1_V_ce1),
    .q1(mem_conv1_1_V_q1)
);

cnn_xcel_mem_convsc4 #(
    .DataWidth( 13 ),
    .AddressRange( 266 ),
    .AddressWidth( 9 ))
mem_conv1_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv1_2_V_address0),
    .ce0(mem_conv1_2_V_ce0),
    .we0(mem_conv1_2_V_we0),
    .d0(tmp_s_fu_320_p3),
    .q0(mem_conv1_2_V_q0),
    .address1(grp_perform_conv_1_fu_258_input_V2_address1),
    .ce1(mem_conv1_2_V_ce1),
    .q1(mem_conv1_2_V_q1)
);

cnn_xcel_mem_convtde #(
    .DataWidth( 14 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
mem_conv2_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv2_0_V_address0),
    .ce0(mem_conv2_0_V_ce0),
    .we0(mem_conv2_0_V_we0),
    .d0(grp_perform_conv_1_fu_258_output_V_d0),
    .q0(mem_conv2_0_V_q0),
    .address1(grp_perform_conv_fu_274_input_0_V_address1),
    .ce1(mem_conv2_0_V_ce1),
    .q1(mem_conv2_0_V_q1)
);

cnn_xcel_mem_convtde #(
    .DataWidth( 14 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
mem_conv2_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv2_1_V_address0),
    .ce0(mem_conv2_1_V_ce0),
    .we0(mem_conv2_1_V_we0),
    .d0(grp_perform_conv_1_fu_258_output_V3_d0),
    .q0(mem_conv2_1_V_q0),
    .address1(grp_perform_conv_fu_274_input_1_V_address1),
    .ce1(mem_conv2_1_V_ce1),
    .q1(mem_conv2_1_V_q1)
);

cnn_xcel_mem_convtde #(
    .DataWidth( 14 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
mem_conv2_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv2_2_V_address0),
    .ce0(mem_conv2_2_V_ce0),
    .we0(mem_conv2_2_V_we0),
    .d0(grp_perform_conv_1_fu_258_output_V4_d0),
    .q0(mem_conv2_2_V_q0),
    .address1(grp_perform_conv_fu_274_input_2_V_address1),
    .ce1(mem_conv2_2_V_ce1),
    .q1(mem_conv2_2_V_q1)
);

cnn_xcel_mem_convtde #(
    .DataWidth( 14 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
mem_conv2_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv2_3_V_address0),
    .ce0(mem_conv2_3_V_ce0),
    .we0(mem_conv2_3_V_we0),
    .d0(grp_perform_conv_1_fu_258_output_V5_d0),
    .q0(mem_conv2_3_V_q0),
    .address1(grp_perform_conv_fu_274_input_3_V_address1),
    .ce1(mem_conv2_3_V_ce1),
    .q1(mem_conv2_3_V_q1)
);

cnn_xcel_mem_convtde #(
    .DataWidth( 14 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
mem_conv2_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv2_4_V_address0),
    .ce0(mem_conv2_4_V_ce0),
    .we0(mem_conv2_4_V_we0),
    .d0(grp_perform_conv_1_fu_258_output_V6_d0),
    .q0(mem_conv2_4_V_q0),
    .address1(grp_perform_conv_fu_274_input_4_V_address1),
    .ce1(mem_conv2_4_V_ce1),
    .q1(mem_conv2_4_V_q1)
);

cnn_xcel_mem_convyd2 #(
    .DataWidth( 14 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
mem_conv3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv3_V_address0),
    .ce0(mem_conv3_V_ce0),
    .we0(mem_conv3_V_we0),
    .d0(grp_perform_conv_fu_274_output_V_d0),
    .q0(mem_conv3_V_q0)
);

cnn_xcel_mem_convyd2 #(
    .DataWidth( 14 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
reshape_output_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(reshape_output_V_address0),
    .ce0(reshape_output_V_ce0),
    .we0(reshape_output_V_we0),
    .d0(grp_reshape_fu_288_output_V_d0),
    .q0(reshape_output_V_q0)
);

perform_conv_1 grp_perform_conv_1_fu_258(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_perform_conv_1_fu_258_ap_start),
    .ap_done(grp_perform_conv_1_fu_258_ap_done),
    .ap_idle(grp_perform_conv_1_fu_258_ap_idle),
    .ap_ready(grp_perform_conv_1_fu_258_ap_ready),
    .input_V_address0(grp_perform_conv_1_fu_258_input_V_address0),
    .input_V_ce0(grp_perform_conv_1_fu_258_input_V_ce0),
    .input_V_q0(mem_conv1_0_V_q0),
    .input_V_address1(grp_perform_conv_1_fu_258_input_V_address1),
    .input_V_ce1(grp_perform_conv_1_fu_258_input_V_ce1),
    .input_V_q1(mem_conv1_0_V_q1),
    .input_V1_address0(grp_perform_conv_1_fu_258_input_V1_address0),
    .input_V1_ce0(grp_perform_conv_1_fu_258_input_V1_ce0),
    .input_V1_q0(mem_conv1_1_V_q0),
    .input_V1_address1(grp_perform_conv_1_fu_258_input_V1_address1),
    .input_V1_ce1(grp_perform_conv_1_fu_258_input_V1_ce1),
    .input_V1_q1(mem_conv1_1_V_q1),
    .input_V2_address0(grp_perform_conv_1_fu_258_input_V2_address0),
    .input_V2_ce0(grp_perform_conv_1_fu_258_input_V2_ce0),
    .input_V2_q0(mem_conv1_2_V_q0),
    .input_V2_address1(grp_perform_conv_1_fu_258_input_V2_address1),
    .input_V2_ce1(grp_perform_conv_1_fu_258_input_V2_ce1),
    .input_V2_q1(mem_conv1_2_V_q1),
    .output_V_address0(grp_perform_conv_1_fu_258_output_V_address0),
    .output_V_ce0(grp_perform_conv_1_fu_258_output_V_ce0),
    .output_V_we0(grp_perform_conv_1_fu_258_output_V_we0),
    .output_V_d0(grp_perform_conv_1_fu_258_output_V_d0),
    .output_V_q0(mem_conv2_0_V_q0),
    .output_V3_address0(grp_perform_conv_1_fu_258_output_V3_address0),
    .output_V3_ce0(grp_perform_conv_1_fu_258_output_V3_ce0),
    .output_V3_we0(grp_perform_conv_1_fu_258_output_V3_we0),
    .output_V3_d0(grp_perform_conv_1_fu_258_output_V3_d0),
    .output_V3_q0(mem_conv2_1_V_q0),
    .output_V4_address0(grp_perform_conv_1_fu_258_output_V4_address0),
    .output_V4_ce0(grp_perform_conv_1_fu_258_output_V4_ce0),
    .output_V4_we0(grp_perform_conv_1_fu_258_output_V4_we0),
    .output_V4_d0(grp_perform_conv_1_fu_258_output_V4_d0),
    .output_V4_q0(mem_conv2_2_V_q0),
    .output_V5_address0(grp_perform_conv_1_fu_258_output_V5_address0),
    .output_V5_ce0(grp_perform_conv_1_fu_258_output_V5_ce0),
    .output_V5_we0(grp_perform_conv_1_fu_258_output_V5_we0),
    .output_V5_d0(grp_perform_conv_1_fu_258_output_V5_d0),
    .output_V5_q0(mem_conv2_3_V_q0),
    .output_V6_address0(grp_perform_conv_1_fu_258_output_V6_address0),
    .output_V6_ce0(grp_perform_conv_1_fu_258_output_V6_ce0),
    .output_V6_we0(grp_perform_conv_1_fu_258_output_V6_we0),
    .output_V6_d0(grp_perform_conv_1_fu_258_output_V6_d0),
    .output_V6_q0(mem_conv2_4_V_q0)
);

perform_conv grp_perform_conv_fu_274(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_perform_conv_fu_274_ap_start),
    .ap_done(grp_perform_conv_fu_274_ap_done),
    .ap_idle(grp_perform_conv_fu_274_ap_idle),
    .ap_ready(grp_perform_conv_fu_274_ap_ready),
    .input_0_V_address0(grp_perform_conv_fu_274_input_0_V_address0),
    .input_0_V_ce0(grp_perform_conv_fu_274_input_0_V_ce0),
    .input_0_V_q0(mem_conv2_0_V_q0),
    .input_0_V_address1(grp_perform_conv_fu_274_input_0_V_address1),
    .input_0_V_ce1(grp_perform_conv_fu_274_input_0_V_ce1),
    .input_0_V_q1(mem_conv2_0_V_q1),
    .input_1_V_address0(grp_perform_conv_fu_274_input_1_V_address0),
    .input_1_V_ce0(grp_perform_conv_fu_274_input_1_V_ce0),
    .input_1_V_q0(mem_conv2_1_V_q0),
    .input_1_V_address1(grp_perform_conv_fu_274_input_1_V_address1),
    .input_1_V_ce1(grp_perform_conv_fu_274_input_1_V_ce1),
    .input_1_V_q1(mem_conv2_1_V_q1),
    .input_2_V_address0(grp_perform_conv_fu_274_input_2_V_address0),
    .input_2_V_ce0(grp_perform_conv_fu_274_input_2_V_ce0),
    .input_2_V_q0(mem_conv2_2_V_q0),
    .input_2_V_address1(grp_perform_conv_fu_274_input_2_V_address1),
    .input_2_V_ce1(grp_perform_conv_fu_274_input_2_V_ce1),
    .input_2_V_q1(mem_conv2_2_V_q1),
    .input_3_V_address0(grp_perform_conv_fu_274_input_3_V_address0),
    .input_3_V_ce0(grp_perform_conv_fu_274_input_3_V_ce0),
    .input_3_V_q0(mem_conv2_3_V_q0),
    .input_3_V_address1(grp_perform_conv_fu_274_input_3_V_address1),
    .input_3_V_ce1(grp_perform_conv_fu_274_input_3_V_ce1),
    .input_3_V_q1(mem_conv2_3_V_q1),
    .input_4_V_address0(grp_perform_conv_fu_274_input_4_V_address0),
    .input_4_V_ce0(grp_perform_conv_fu_274_input_4_V_ce0),
    .input_4_V_q0(mem_conv2_4_V_q0),
    .input_4_V_address1(grp_perform_conv_fu_274_input_4_V_address1),
    .input_4_V_ce1(grp_perform_conv_fu_274_input_4_V_ce1),
    .input_4_V_q1(mem_conv2_4_V_q1),
    .output_V_address0(grp_perform_conv_fu_274_output_V_address0),
    .output_V_ce0(grp_perform_conv_fu_274_output_V_ce0),
    .output_V_we0(grp_perform_conv_fu_274_output_V_we0),
    .output_V_d0(grp_perform_conv_fu_274_output_V_d0),
    .output_V_q0(mem_conv3_V_q0)
);

reshape grp_reshape_fu_288(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reshape_fu_288_ap_start),
    .ap_done(grp_reshape_fu_288_ap_done),
    .ap_idle(grp_reshape_fu_288_ap_idle),
    .ap_ready(grp_reshape_fu_288_ap_ready),
    .input_V_address0(grp_reshape_fu_288_input_V_address0),
    .input_V_ce0(grp_reshape_fu_288_input_V_ce0),
    .input_V_q0(mem_conv3_V_q0),
    .output_V_address0(grp_reshape_fu_288_output_V_address0),
    .output_V_ce0(grp_reshape_fu_288_output_V_ce0),
    .output_V_we0(grp_reshape_fu_288_output_V_we0),
    .output_V_d0(grp_reshape_fu_288_output_V_d0)
);

dut_uitofp_32ns_3Aem #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_uitofp_32ns_3Aem_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp32_V_3_reg_680),
    .ce(1'b1),
    .dout(grp_fu_294_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_perform_conv_1_fu_258_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond5_fu_301_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_perform_conv_1_fu_258_ap_start_reg <= 1'b1;
        end else if ((grp_perform_conv_1_fu_258_ap_ready == 1'b1)) begin
            grp_perform_conv_1_fu_258_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_perform_conv_fu_274_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_perform_conv_fu_274_ap_start_reg <= 1'b1;
        end else if ((grp_perform_conv_fu_274_ap_ready == 1'b1)) begin
            grp_perform_conv_fu_274_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reshape_fu_288_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_reshape_fu_288_ap_start_reg <= 1'b1;
        end else if ((grp_reshape_fu_288_ap_ready == 1'b1)) begin
            grp_reshape_fu_288_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bvh_d_index_reg_214 <= 6'd0;
    end else if (((exitcond5_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        bvh_d_index_reg_214 <= i_fu_307_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i4_reg_247 <= i_3_reg_626;
    end else if (((grp_reshape_fu_288_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        i4_reg_247 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_225 <= 13'd0;
    end else if (((exitcond5_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_225 <= next_mul_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_urem_reg_236 <= 6'd0;
    end else if (((exitcond5_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_urem_reg_236 <= idx_urem_fu_370_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_3_reg_626 <= i_3_fu_384_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        is_neg_reg_648 <= reshape_output_V_q0[32'd13];
        p_Val2_s_reg_641 <= reshape_output_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        msb_idx_reg_665 <= msb_idx_fu_445_p2;
        p_Val2_5_reg_659 <= p_Val2_5_fu_413_p3;
        tmp_23_reg_654 <= tmp_23_fu_403_p2;
        tmp_65_reg_670 <= tmp_65_fu_451_p1;
        tmp_66_reg_675 <= msb_idx_fu_445_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_23_reg_654 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        tmp32_V_3_reg_680 <= tmp32_V_3_fu_527_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_23_reg_654 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        tmp32_V_6_reg_685 <= tmp32_V_6_fu_535_p1;
        tmp_29_reg_690 <= tmp_29_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_378_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_22_reg_631[9 : 0] <= tmp_22_fu_390_p1[9 : 0];
    end
end

always @ (*) begin
    if ((((exitcond_fu_378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_fu_301_p2 == 1'd0) & (tmp_62_fu_331_p1 == 3'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_conv1_0_V_address0 = newIndex1_fu_351_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv1_0_V_address0 = grp_perform_conv_1_fu_258_input_V_address0;
    end else begin
        mem_conv1_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond5_fu_301_p2 == 1'd0) & (tmp_62_fu_331_p1 == 3'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_conv1_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv1_0_V_ce0 = grp_perform_conv_1_fu_258_input_V_ce0;
    end else begin
        mem_conv1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv1_0_V_ce1 = grp_perform_conv_1_fu_258_input_V_ce1;
    end else begin
        mem_conv1_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_fu_301_p2 == 1'd0) & (tmp_62_fu_331_p1 == 3'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_conv1_0_V_we0 = 1'b1;
    end else begin
        mem_conv1_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_fu_301_p2 == 1'd0) & (tmp_62_fu_331_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_conv1_1_V_address0 = newIndex1_fu_351_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv1_1_V_address0 = grp_perform_conv_1_fu_258_input_V1_address0;
    end else begin
        mem_conv1_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond5_fu_301_p2 == 1'd0) & (tmp_62_fu_331_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_conv1_1_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv1_1_V_ce0 = grp_perform_conv_1_fu_258_input_V1_ce0;
    end else begin
        mem_conv1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv1_1_V_ce1 = grp_perform_conv_1_fu_258_input_V1_ce1;
    end else begin
        mem_conv1_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_fu_301_p2 == 1'd0) & (tmp_62_fu_331_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_conv1_1_V_we0 = 1'b1;
    end else begin
        mem_conv1_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_62_fu_331_p1 == 3'd0) & ~(tmp_62_fu_331_p1 == 3'd1) & (exitcond5_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_conv1_2_V_address0 = newIndex1_fu_351_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv1_2_V_address0 = grp_perform_conv_1_fu_258_input_V2_address0;
    end else begin
        mem_conv1_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~(tmp_62_fu_331_p1 == 3'd0) & ~(tmp_62_fu_331_p1 == 3'd1) & (exitcond5_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_conv1_2_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv1_2_V_ce0 = grp_perform_conv_1_fu_258_input_V2_ce0;
    end else begin
        mem_conv1_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv1_2_V_ce1 = grp_perform_conv_1_fu_258_input_V2_ce1;
    end else begin
        mem_conv1_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_62_fu_331_p1 == 3'd0) & ~(tmp_62_fu_331_p1 == 3'd1) & (exitcond5_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        mem_conv1_2_V_we0 = 1'b1;
    end else begin
        mem_conv1_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_0_V_address0 = grp_perform_conv_fu_274_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_0_V_address0 = grp_perform_conv_1_fu_258_output_V_address0;
    end else begin
        mem_conv2_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_0_V_ce0 = grp_perform_conv_fu_274_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_0_V_ce0 = grp_perform_conv_1_fu_258_output_V_ce0;
    end else begin
        mem_conv2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_0_V_ce1 = grp_perform_conv_fu_274_input_0_V_ce1;
    end else begin
        mem_conv2_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_0_V_we0 = grp_perform_conv_1_fu_258_output_V_we0;
    end else begin
        mem_conv2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_1_V_address0 = grp_perform_conv_fu_274_input_1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_1_V_address0 = grp_perform_conv_1_fu_258_output_V3_address0;
    end else begin
        mem_conv2_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_1_V_ce0 = grp_perform_conv_fu_274_input_1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_1_V_ce0 = grp_perform_conv_1_fu_258_output_V3_ce0;
    end else begin
        mem_conv2_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_1_V_ce1 = grp_perform_conv_fu_274_input_1_V_ce1;
    end else begin
        mem_conv2_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_1_V_we0 = grp_perform_conv_1_fu_258_output_V3_we0;
    end else begin
        mem_conv2_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_2_V_address0 = grp_perform_conv_fu_274_input_2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_2_V_address0 = grp_perform_conv_1_fu_258_output_V4_address0;
    end else begin
        mem_conv2_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_2_V_ce0 = grp_perform_conv_fu_274_input_2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_2_V_ce0 = grp_perform_conv_1_fu_258_output_V4_ce0;
    end else begin
        mem_conv2_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_2_V_ce1 = grp_perform_conv_fu_274_input_2_V_ce1;
    end else begin
        mem_conv2_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_2_V_we0 = grp_perform_conv_1_fu_258_output_V4_we0;
    end else begin
        mem_conv2_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_3_V_address0 = grp_perform_conv_fu_274_input_3_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_3_V_address0 = grp_perform_conv_1_fu_258_output_V5_address0;
    end else begin
        mem_conv2_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_3_V_ce0 = grp_perform_conv_fu_274_input_3_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_3_V_ce0 = grp_perform_conv_1_fu_258_output_V5_ce0;
    end else begin
        mem_conv2_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_3_V_ce1 = grp_perform_conv_fu_274_input_3_V_ce1;
    end else begin
        mem_conv2_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_3_V_we0 = grp_perform_conv_1_fu_258_output_V5_we0;
    end else begin
        mem_conv2_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_4_V_address0 = grp_perform_conv_fu_274_input_4_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_4_V_address0 = grp_perform_conv_1_fu_258_output_V6_address0;
    end else begin
        mem_conv2_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_4_V_ce0 = grp_perform_conv_fu_274_input_4_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_4_V_ce0 = grp_perform_conv_1_fu_258_output_V6_ce0;
    end else begin
        mem_conv2_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv2_4_V_ce1 = grp_perform_conv_fu_274_input_4_V_ce1;
    end else begin
        mem_conv2_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_conv2_4_V_we0 = grp_perform_conv_1_fu_258_output_V6_we0;
    end else begin
        mem_conv2_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mem_conv3_V_address0 = grp_reshape_fu_288_input_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv3_V_address0 = grp_perform_conv_fu_274_output_V_address0;
    end else begin
        mem_conv3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mem_conv3_V_ce0 = grp_reshape_fu_288_input_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv3_V_ce0 = grp_perform_conv_fu_274_output_V_ce0;
    end else begin
        mem_conv3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mem_conv3_V_we0 = grp_perform_conv_fu_274_output_V_we0;
    end else begin
        mem_conv3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        reshape_output_V_address0 = tmp_22_fu_390_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reshape_output_V_address0 = grp_reshape_fu_288_output_V_address0;
    end else begin
        reshape_output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        reshape_output_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reshape_output_V_ce0 = grp_reshape_fu_288_output_V_ce0;
    end else begin
        reshape_output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        reshape_output_V_we0 = grp_reshape_fu_288_output_V_we0;
    end else begin
        reshape_output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond5_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_perform_conv_1_fu_258_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_perform_conv_fu_274_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_reshape_fu_288_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond_fu_378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond5_fu_301_p2 = ((bvh_d_index_reg_214 == 6'd49) ? 1'b1 : 1'b0);

assign exitcond_fu_378_p2 = ((i4_reg_247 == 10'd576) ? 1'b1 : 1'b0);

assign grp_perform_conv_1_fu_258_ap_start = grp_perform_conv_1_fu_258_ap_start_reg;

assign grp_perform_conv_fu_274_ap_start = grp_perform_conv_fu_274_ap_start_reg;

assign grp_reshape_fu_288_ap_start = grp_reshape_fu_288_ap_start_reg;

assign i_3_fu_384_p2 = (i4_reg_247 + 10'd1);

assign i_fu_307_p2 = (bvh_d_index_reg_214 + 6'd1);

assign icmp_fu_483_p2 = ((tmp_67_fu_473_p4 == 26'd0) ? 1'b1 : 1'b0);

assign idx_urem_fu_370_p3 = ((tmp_73_fu_364_p2[0:0] === 1'b1) ? next_urem_fu_358_p2 : 6'd0);

assign index_assign_cast3_fu_297_p1 = bvh_d_index_reg_214;

assign msb_idx_1_cast_fu_469_p1 = msb_idx_1_fu_463_p3;

assign msb_idx_1_fu_463_p3 = ((tmp_66_reg_675[0:0] === 1'b1) ? 31'd0 : tmp_65_reg_670);

assign msb_idx_fu_445_p2 = (32'd13 - num_zeros_fu_437_p3);

assign newIndex1_fu_351_p1 = tmp_63_fu_341_p4;

assign next_mul_fu_335_p2 = (13'd86 + phi_mul_reg_225);

assign next_urem_fu_358_p2 = (phi_urem_reg_236 + 6'd1);


always @ (p_Result_4_fu_429_p3) begin
    if (p_Result_4_fu_429_p3[0] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd0;
    end else if (p_Result_4_fu_429_p3[1] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd1;
    end else if (p_Result_4_fu_429_p3[2] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd2;
    end else if (p_Result_4_fu_429_p3[3] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd3;
    end else if (p_Result_4_fu_429_p3[4] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd4;
    end else if (p_Result_4_fu_429_p3[5] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd5;
    end else if (p_Result_4_fu_429_p3[6] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd6;
    end else if (p_Result_4_fu_429_p3[7] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd7;
    end else if (p_Result_4_fu_429_p3[8] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd8;
    end else if (p_Result_4_fu_429_p3[9] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd9;
    end else if (p_Result_4_fu_429_p3[10] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd10;
    end else if (p_Result_4_fu_429_p3[11] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd11;
    end else if (p_Result_4_fu_429_p3[12] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd12;
    end else if (p_Result_4_fu_429_p3[13] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd13;
    end else if (p_Result_4_fu_429_p3[14] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd14;
    end else if (p_Result_4_fu_429_p3[15] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd15;
    end else if (p_Result_4_fu_429_p3[16] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd16;
    end else if (p_Result_4_fu_429_p3[17] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd17;
    end else if (p_Result_4_fu_429_p3[18] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd18;
    end else if (p_Result_4_fu_429_p3[19] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd19;
    end else if (p_Result_4_fu_429_p3[20] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd20;
    end else if (p_Result_4_fu_429_p3[21] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd21;
    end else if (p_Result_4_fu_429_p3[22] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd22;
    end else if (p_Result_4_fu_429_p3[23] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd23;
    end else if (p_Result_4_fu_429_p3[24] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd24;
    end else if (p_Result_4_fu_429_p3[25] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd25;
    end else if (p_Result_4_fu_429_p3[26] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd26;
    end else if (p_Result_4_fu_429_p3[27] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd27;
    end else if (p_Result_4_fu_429_p3[28] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd28;
    end else if (p_Result_4_fu_429_p3[29] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd29;
    end else if (p_Result_4_fu_429_p3[30] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd30;
    end else if (p_Result_4_fu_429_p3[31] == 1'b1) begin
        num_zeros_fu_437_p3 = 32'd31;
    end else begin
        num_zeros_fu_437_p3 = 32'd32;
    end
end

assign output_V_address0 = tmp_22_reg_631;

assign output_V_d0 = ((tmp_23_reg_654[0:0] === 1'b1) ? 32'd0 : p_Result_5_fu_578_p5);

assign p_Repl2_2_trunc_fu_565_p2 = (tmp1_cast_cast_fu_558_p3 + tmp_72_fu_555_p1);

integer ap_tvar_int_0;

always @ (p_Val2_5_fu_413_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_3_fu_419_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_3_fu_419_p4[ap_tvar_int_0] = p_Val2_5_fu_413_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_Result_4_fu_429_p3 = {{18'd262143}, {p_Result_3_fu_419_p4}};

assign p_Result_5_fu_578_p5 = {{tmp_31_fu_571_p3}, {tmp32_V_6_reg_685[22:0]}};

assign p_Result_8_fu_539_p4 = {{tmp32_V_6_fu_535_p1[30:23]}};

assign p_Result_s_fu_518_p2 = p_Val2_5_reg_659 >> tmp_70_fu_514_p1;

assign p_Val2_5_fu_413_p3 = ((is_neg_reg_648[0:0] === 1'b1) ? tmp_24_fu_408_p2 : p_Val2_s_reg_641);

assign tmp1_cast_cast_fu_558_p3 = ((tmp_29_reg_690[0:0] === 1'b1) ? 8'd116 : 8'd115);

assign tmp32_V_1_fu_498_p2 = tmp32_V_fu_489_p1 << tmp_27_fu_492_p2;

assign tmp32_V_2_fu_523_p1 = p_Result_s_fu_518_p2;

assign tmp32_V_3_fu_527_p3 = ((icmp_fu_483_p2[0:0] === 1'b1) ? tmp32_V_1_fu_498_p2 : tmp32_V_2_fu_523_p1);

assign tmp32_V_6_fu_535_p1 = grp_fu_294_p1;

assign tmp32_V_fu_489_p1 = p_Val2_5_reg_659;

assign tmp_22_fu_390_p1 = i4_reg_247;

assign tmp_23_fu_403_p2 = ((p_Val2_s_reg_641 == 14'd0) ? 1'b1 : 1'b0);

assign tmp_24_fu_408_p2 = (14'd0 - p_Val2_s_reg_641);

assign tmp_27_fu_492_p2 = (32'd31 - msb_idx_1_cast_fu_469_p1);

assign tmp_29_fu_549_p2 = ((p_Result_8_fu_539_p4 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_31_fu_571_p3 = {{is_neg_reg_648}, {p_Repl2_2_trunc_fu_565_p2}};

assign tmp_62_fu_331_p1 = phi_urem_reg_236[2:0];

assign tmp_63_fu_341_p4 = {{phi_mul_reg_225[12:8]}};

assign tmp_65_fu_451_p1 = msb_idx_fu_445_p2[30:0];

assign tmp_67_fu_473_p4 = {{msb_idx_1_fu_463_p3[30:5]}};

assign tmp_68_fu_504_p1 = msb_idx_1_fu_463_p3[3:0];

assign tmp_69_fu_508_p2 = (4'd1 + tmp_68_fu_504_p1);

assign tmp_70_fu_514_p1 = tmp_69_fu_508_p2;

assign tmp_72_fu_555_p1 = msb_idx_reg_665[7:0];

assign tmp_73_fu_364_p2 = ((next_urem_fu_358_p2 < 6'd3) ? 1'b1 : 1'b0);

assign tmp_fu_313_p3 = input_V[index_assign_cast3_fu_297_p1];

assign tmp_s_fu_320_p3 = {{tmp_fu_313_p3}, {12'd0}};

always @ (posedge ap_clk) begin
    tmp_22_reg_631[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //cnn_xcel
