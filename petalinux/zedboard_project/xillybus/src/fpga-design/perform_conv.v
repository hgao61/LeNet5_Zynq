// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module perform_conv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_V_address0,
        input_0_V_ce0,
        input_0_V_q0,
        input_0_V_address1,
        input_0_V_ce1,
        input_0_V_q1,
        input_1_V_address0,
        input_1_V_ce0,
        input_1_V_q0,
        input_1_V_address1,
        input_1_V_ce1,
        input_1_V_q1,
        input_2_V_address0,
        input_2_V_ce0,
        input_2_V_q0,
        input_2_V_address1,
        input_2_V_ce1,
        input_2_V_q1,
        input_3_V_address0,
        input_3_V_ce0,
        input_3_V_q0,
        input_3_V_address1,
        input_3_V_ce1,
        input_3_V_q1,
        input_4_V_address0,
        input_4_V_ce0,
        input_4_V_q0,
        input_4_V_address1,
        input_4_V_ce1,
        input_4_V_q1,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_pp0_stage0 = 14'd4;
parameter    ap_ST_fsm_pp0_stage1 = 14'd8;
parameter    ap_ST_fsm_pp0_stage2 = 14'd16;
parameter    ap_ST_fsm_pp0_stage3 = 14'd32;
parameter    ap_ST_fsm_pp0_stage4 = 14'd64;
parameter    ap_ST_fsm_state26 = 14'd128;
parameter    ap_ST_fsm_state27 = 14'd256;
parameter    ap_ST_fsm_state28 = 14'd512;
parameter    ap_ST_fsm_state29 = 14'd1024;
parameter    ap_ST_fsm_state30 = 14'd2048;
parameter    ap_ST_fsm_state31 = 14'd4096;
parameter    ap_ST_fsm_state32 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] input_0_V_address0;
output   input_0_V_ce0;
input  [13:0] input_0_V_q0;
output  [7:0] input_0_V_address1;
output   input_0_V_ce1;
input  [13:0] input_0_V_q1;
output  [7:0] input_1_V_address0;
output   input_1_V_ce0;
input  [13:0] input_1_V_q0;
output  [7:0] input_1_V_address1;
output   input_1_V_ce1;
input  [13:0] input_1_V_q1;
output  [7:0] input_2_V_address0;
output   input_2_V_ce0;
input  [13:0] input_2_V_q0;
output  [7:0] input_2_V_address1;
output   input_2_V_ce1;
input  [13:0] input_2_V_q1;
output  [7:0] input_3_V_address0;
output   input_3_V_ce0;
input  [13:0] input_3_V_q0;
output  [7:0] input_3_V_address1;
output   input_3_V_ce1;
input  [13:0] input_3_V_q1;
output  [7:0] input_4_V_address0;
output   input_4_V_ce0;
input  [13:0] input_4_V_q0;
output  [7:0] input_4_V_address1;
output   input_4_V_ce1;
input  [13:0] input_4_V_q1;
output  [9:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [13:0] output_V_d0;
input  [13:0] output_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] input_0_V_address0;
reg input_0_V_ce0;
reg[7:0] input_0_V_address1;
reg input_0_V_ce1;
reg[7:0] input_1_V_address0;
reg input_1_V_ce0;
reg[7:0] input_1_V_address1;
reg input_1_V_ce1;
reg[7:0] input_2_V_address0;
reg input_2_V_ce0;
reg[7:0] input_2_V_address1;
reg input_2_V_ce1;
reg[7:0] input_3_V_address0;
reg input_3_V_ce0;
reg[7:0] input_3_V_address1;
reg input_3_V_ce1;
reg[7:0] input_4_V_address0;
reg input_4_V_ce0;
reg[7:0] input_4_V_address1;
reg input_4_V_ce1;
reg[9:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[13:0] output_V_d0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] w_conv23_address0;
reg    w_conv23_ce0;
wire   [11:0] w_conv23_q0;
reg   [14:0] w_conv23_address1;
reg    w_conv23_ce1;
wire   [11:0] w_conv23_q1;
wire   [5:0] b_conv24_address0;
reg    b_conv24_ce0;
wire   [8:0] b_conv24_q0;
reg   [14:0] indvar_flatten3_reg_673;
reg   [1:0] x_reg_684;
reg   [13:0] indvar_flatten4_reg_696;
reg   [1:0] y_reg_707;
reg   [12:0] indvar_flatten_reg_718;
reg   [6:0] n_reg_729;
reg   [5:0] m_reg_740;
reg   [13:0] reg_784;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
wire    ap_block_state18_pp0_stage0_iter3;
wire    ap_block_state23_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten4_reg_2454;
reg   [0:0] exitcond_flatten4_reg_2454_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_state12_pp0_stage4_iter1;
wire    ap_block_state17_pp0_stage4_iter2;
wire    ap_block_state22_pp0_stage4_iter3;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] exitcond_flatten4_reg_2454_pp0_iter2_reg;
reg   [13:0] reg_789;
reg   [13:0] reg_794;
reg   [13:0] reg_799;
reg   [13:0] reg_804;
reg  signed [11:0] reg_809;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state10_pp0_stage2_iter1;
wire    ap_block_state15_pp0_stage2_iter2;
wire    ap_block_state20_pp0_stage2_iter3;
wire    ap_block_state25_pp0_stage2_iter4;
wire    ap_block_pp0_stage2_11001;
reg    ap_enable_reg_pp0_iter3;
reg   [13:0] reg_813;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_state14_pp0_stage1_iter2;
wire    ap_block_state19_pp0_stage1_iter3;
wire    ap_block_state24_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] exitcond_flatten4_reg_2454_pp0_iter3_reg;
reg   [13:0] reg_818;
reg   [13:0] reg_823;
reg   [13:0] reg_828;
reg   [13:0] reg_833;
wire   [0:0] exitcond1_fu_838_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_1_fu_844_p2;
wire   [1:0] x_4_fu_859_p2;
reg   [1:0] x_4_reg_2432;
wire  signed [4:0] tmp4_fu_887_p2;
reg  signed [4:0] tmp4_reg_2439;
wire   [10:0] tmp_9_fu_905_p3;
reg   [10:0] tmp_9_reg_2444;
wire  signed [31:0] o_index_cast_fu_941_p1;
reg  signed [31:0] o_index_cast_reg_2449;
wire   [0:0] exitcond_flatten4_fu_945_p2;
reg   [0:0] exitcond_flatten4_reg_2454_pp0_iter4_reg;
wire   [14:0] indvar_flatten_next4_fu_951_p2;
reg   [14:0] indvar_flatten_next4_reg_2458;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_957_p2;
reg   [0:0] exitcond_flatten_reg_2463;
wire   [1:0] tmp_25_1_cast_mid2_fu_977_p3;
reg   [1:0] tmp_25_1_cast_mid2_reg_2471;
wire   [0:0] exitcond_flatten_mid_fu_1009_p2;
reg   [0:0] exitcond_flatten_mid_reg_2476;
wire   [1:0] y_2_fu_1015_p2;
reg   [1:0] y_2_reg_2482;
wire   [0:0] tmp_22_fu_1021_p2;
reg   [0:0] tmp_22_reg_2488;
wire   [6:0] n_mid_fu_1027_p3;
reg   [6:0] n_mid_reg_2494;
wire   [1:0] y_cast_mid2_fu_1035_p3;
reg   [1:0] y_cast_mid2_reg_2500;
wire   [0:0] exitcond9_mid1_fu_1059_p2;
reg   [0:0] exitcond9_mid1_reg_2505;
wire   [5:0] m_mid2_fu_1077_p3;
reg   [5:0] m_mid2_reg_2512;
wire   [4:0] tmp_49_fu_1085_p1;
reg   [4:0] tmp_49_reg_2518;
wire   [5:0] tmp5_fu_1089_p2;
reg   [5:0] tmp5_reg_2523;
wire   [12:0] indvar_flatten_op_fu_1095_p2;
reg   [12:0] indvar_flatten_op_reg_2528;
wire   [13:0] indvar_flatten35_op_fu_1101_p2;
reg   [13:0] indvar_flatten35_op_reg_2533;
wire   [1:0] x_cast2_mid2_fu_1107_p3;
reg   [1:0] x_cast2_mid2_reg_2538;
wire   [9:0] x_cast2_mid2_cast_fu_1113_p1;
reg   [9:0] x_cast2_mid2_cast_reg_2544;
wire   [9:0] tmp_25_1_cast_mid2_c_fu_1121_p1;
reg   [9:0] tmp_25_1_cast_mid2_c_reg_2550;
wire   [6:0] n_mid2_fu_1268_p3;
reg   [6:0] n_mid2_reg_2556;
wire   [10:0] tmp_14_fu_1288_p2;
reg   [10:0] tmp_14_reg_2561;
reg   [10:0] tmp_14_reg_2561_pp0_iter1_reg;
wire   [9:0] tmp1_fu_1315_p2;
reg   [9:0] tmp1_reg_2567;
wire   [9:0] i_index_fu_1321_p2;
reg   [9:0] i_index_reg_2574;
reg   [9:0] i_index_reg_2574_pp0_iter1_reg;
reg   [9:0] i_index_reg_2574_pp0_iter2_reg;
reg   [9:0] output_V_addr_3_reg_2580;
reg   [9:0] output_V_addr_3_reg_2580_pp0_iter1_reg;
reg   [9:0] output_V_addr_3_reg_2580_pp0_iter2_reg;
reg   [9:0] output_V_addr_3_reg_2580_pp0_iter3_reg;
reg   [9:0] output_V_addr_3_reg_2580_pp0_iter4_reg;
wire   [9:0] i_index_1_fu_1333_p2;
reg   [9:0] i_index_1_reg_2585;
reg   [9:0] i_index_1_reg_2585_pp0_iter1_reg;
wire   [12:0] indvar_flatten_next_fu_1345_p3;
reg   [12:0] indvar_flatten_next_reg_2591;
wire   [13:0] indvar_flatten_next3_fu_1351_p3;
reg   [13:0] indvar_flatten_next3_reg_2596;
wire   [9:0] tmp_25_2_cast_mid2_fu_1366_p1;
reg   [9:0] tmp_25_2_cast_mid2_reg_2601;
wire   [9:0] tmp1_0_1_fu_1370_p2;
reg   [9:0] tmp1_0_1_reg_2607;
wire   [9:0] i_index_0_1_fu_1375_p2;
reg   [9:0] i_index_0_1_reg_2613;
reg   [9:0] i_index_0_1_reg_2613_pp0_iter1_reg;
wire   [9:0] i_index_2_fu_1386_p2;
reg   [9:0] i_index_2_reg_2619;
reg   [9:0] i_index_2_reg_2619_pp0_iter1_reg;
wire   [9:0] i_index_0_2_fu_1402_p2;
reg   [9:0] i_index_0_2_reg_2625;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_state11_pp0_stage3_iter1;
wire    ap_block_state16_pp0_stage3_iter2;
wire    ap_block_state21_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
reg   [9:0] i_index_0_2_reg_2625_pp0_iter1_reg;
wire   [9:0] i_index_1_1_fu_1413_p2;
reg   [9:0] i_index_1_1_reg_2631;
reg   [9:0] i_index_1_1_reg_2631_pp0_iter1_reg;
wire   [9:0] i_index_1_2_fu_1423_p2;
reg   [9:0] i_index_1_2_reg_2637;
reg   [9:0] i_index_1_2_reg_2637_pp0_iter1_reg;
wire   [9:0] i_index_2_1_fu_1428_p2;
reg   [9:0] i_index_2_1_reg_2643;
reg   [9:0] i_index_2_1_reg_2643_pp0_iter1_reg;
wire   [9:0] i_index_2_2_fu_1432_p2;
reg   [9:0] i_index_2_2_reg_2649;
reg   [9:0] i_index_2_2_reg_2649_pp0_iter1_reg;
reg   [9:0] i_index_2_2_reg_2649_pp0_iter2_reg;
wire   [5:0] m_1_fu_1447_p2;
reg   [5:0] m_1_reg_2655;
reg   [8:0] tmp_53_reg_2660;
reg   [8:0] tmp_56_reg_2665;
wire   [14:0] tmp_15_fu_1507_p2;
reg   [14:0] tmp_15_reg_2695;
reg   [14:0] tmp_15_reg_2695_pp0_iter3_reg;
reg   [8:0] tmp_50_reg_2741;
reg   [8:0] tmp_51_reg_2746;
reg  signed [11:0] w_conv23_load_1_reg_2751;
reg   [8:0] tmp_52_reg_2756;
reg  signed [11:0] w_conv23_load_3_reg_2816;
reg   [8:0] tmp_54_reg_2821;
reg   [8:0] tmp_55_reg_2831;
reg   [8:0] tmp_57_reg_2841;
wire   [13:0] tmp_21_fu_1671_p7;
reg  signed [13:0] tmp_21_reg_2846;
wire   [13:0] tmp_26_fu_1703_p7;
reg  signed [13:0] tmp_26_reg_2876;
reg  signed [11:0] w_conv23_load_4_reg_2881;
reg  signed [11:0] w_conv23_load_5_reg_2886;
reg   [8:0] tmp_58_reg_2901;
reg   [13:0] p_Val2_5_reg_2906;
wire   [13:0] tmp_23_fu_1771_p7;
reg  signed [13:0] tmp_23_reg_2911;
reg   [13:0] p_Val2_5_1_reg_2916;
wire   [13:0] tmp_29_fu_1830_p7;
reg  signed [13:0] tmp_29_reg_2971;
reg  signed [11:0] w_conv23_load_7_reg_2976;
reg   [13:0] p_Val2_5_0_1_reg_2986;
wire   [13:0] tmp_24_fu_1875_p7;
reg  signed [13:0] tmp_24_reg_2991;
wire   [13:0] tmp_27_fu_1895_p7;
reg  signed [13:0] tmp_27_reg_2996;
reg   [13:0] p_Val2_5_2_reg_3001;
reg  signed [11:0] w_conv23_load_8_reg_3031;
wire   [13:0] tmp_28_fu_1953_p7;
reg  signed [13:0] tmp_28_reg_3041;
wire   [13:0] tmp_30_fu_1973_p7;
reg  signed [13:0] tmp_30_reg_3046;
reg  signed [11:0] w_conv23_load_2_reg_3076;
wire   [13:0] tmp_31_fu_2005_p7;
reg  signed [13:0] tmp_31_reg_3081;
reg   [13:0] p_Val2_5_0_2_reg_3086;
reg   [13:0] p_Val2_5_1_1_reg_3091;
reg   [13:0] p_Val2_5_1_2_reg_3096;
wire   [13:0] tmp7_fu_2066_p2;
reg   [13:0] tmp7_reg_3101;
reg   [13:0] p_Val2_5_2_1_reg_3106;
reg   [13:0] p_Val2_5_2_2_reg_3111;
wire   [13:0] tmp6_fu_2110_p2;
reg   [13:0] tmp6_reg_3116;
wire   [13:0] tmp11_fu_2115_p2;
reg   [13:0] tmp11_reg_3121;
wire   [13:0] p_Val2_6_2_2_fu_2133_p2;
reg   [13:0] p_Val2_6_2_2_reg_3126;
wire   [6:0] n_1_fu_2148_p2;
reg   [6:0] n_1_reg_3134;
wire    ap_CS_fsm_state27;
wire   [0:0] exitcond8_fu_2142_p2;
wire   [9:0] tmp14_fu_2175_p2;
reg   [9:0] tmp14_reg_3144;
wire   [13:0] p_Val2_3_cast_fu_2181_p1;
reg   [13:0] p_Val2_3_cast_reg_3149;
wire    ap_CS_fsm_state28;
wire   [10:0] tmp14_cast_fu_2185_p1;
reg   [10:0] tmp14_cast_reg_3154;
wire   [12:0] tmp_19_fu_2188_p1;
reg   [12:0] tmp_19_reg_3159;
wire   [4:0] x2_cast_fu_2192_p1;
reg   [4:0] x2_cast_reg_3164;
wire    ap_CS_fsm_state29;
wire   [1:0] x_3_fu_2202_p2;
reg   [1:0] x_3_reg_3172;
wire   [1:0] y_3_fu_2218_p2;
reg   [1:0] y_3_reg_3180;
wire    ap_CS_fsm_state30;
reg   [9:0] output_V_addr_4_reg_3185;
wire   [0:0] exitcond_fu_2212_p2;
wire   [12:0] p_Val2_2_s_fu_2285_p3;
reg   [12:0] p_Val2_2_s_reg_3190;
wire    ap_CS_fsm_state31;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter4;
reg   [9:0] i_reg_662;
reg   [14:0] ap_phi_mux_indvar_flatten3_phi_fu_677_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_x_phi_fu_688_p4;
reg   [13:0] ap_phi_mux_indvar_flatten4_phi_fu_700_p4;
reg   [1:0] ap_phi_mux_y_phi_fu_711_p4;
reg   [12:0] ap_phi_mux_indvar_flatten_phi_fu_722_p4;
reg   [6:0] ap_phi_mux_n_phi_fu_733_p4;
reg   [5:0] ap_phi_mux_m_phi_fu_744_p4;
reg   [6:0] n1_reg_751;
wire   [0:0] exitcond7_fu_2196_p2;
wire    ap_CS_fsm_state26;
reg   [1:0] x2_reg_762;
reg   [1:0] y3_reg_773;
wire    ap_CS_fsm_state32;
wire   [63:0] tmp_s_fu_850_p1;
wire   [63:0] tmp_12_mid2_cast_fu_1263_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] newIndex30_fu_1484_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] tmp_16_fu_1513_p1;
wire   [63:0] tmp_29_0_1_fu_1524_p1;
wire   [63:0] newIndex34_fu_1532_p1;
wire   [63:0] tmp_29_1_fu_1582_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] newIndex23_fu_1590_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] newIndex25_fu_1602_p1;
wire   [63:0] tmp_29_1_1_fu_1616_p1;
wire   [63:0] tmp_29_1_2_fu_1638_p1;
wire   [63:0] newIndex28_fu_1690_p1;
wire   [63:0] tmp_29_2_fu_1724_p1;
wire   [63:0] tmp_29_2_1_fu_1734_p1;
wire   [63:0] newIndex32_fu_1805_p1;
wire   [63:0] newIndex33_fu_1817_p1;
wire   [63:0] tmp_29_2_2_fu_1851_p1;
wire   [63:0] newIndex35_fu_1930_p1;
wire   [63:0] tmp_29_0_2_fu_1944_p1;
wire   [63:0] newIndex5_fu_1992_p1;
wire   [63:0] tmp_6_fu_2170_p1;
wire   [63:0] tmp_18_fu_2260_p1;
wire   [13:0] p_Val2_2_cast_38_fu_2293_p1;
wire   [3:0] p_shl1_fu_869_p3;
wire   [4:0] p_shl1_cast_fu_877_p1;
wire   [4:0] y_cast2_fu_865_p1;
wire   [4:0] x_cast3_fu_855_p1;
wire   [4:0] tmp_4_fu_881_p2;
wire   [5:0] tmp_fu_901_p1;
wire   [8:0] p_shl2_fu_913_p3;
wire   [9:0] n_cast_fu_897_p1;
wire   [9:0] p_shl2_cast_fu_921_p1;
wire   [9:0] tmp3_fu_925_p2;
wire   [10:0] tmp3_cast_fu_931_p1;
wire  signed [10:0] tmp4_cast_fu_893_p1;
wire   [10:0] o_index_fu_935_p2;
wire   [1:0] x_4_mid1_fu_971_p2;
wire   [0:0] exitcond2_fu_991_p2;
wire   [0:0] not_exitcond_flatten_fu_985_p2;
wire   [0:0] exitcond_flatten2_fu_1003_p2;
wire   [1:0] y_mid_fu_963_p3;
wire   [0:0] exitcond_flatten_not_fu_1047_p2;
wire   [0:0] exitcond9_mid_fu_997_p2;
wire   [0:0] not_exitcond_flatten_2_fu_1053_p2;
wire   [0:0] tmp_25_fu_1065_p2;
wire   [0:0] tmp_47_fu_1071_p2;
wire   [5:0] y_cast_mid2_cast_fu_1043_p1;
wire   [4:0] tmp4_cast_mid_cast_fu_1124_p1;
wire   [31:0] tmp_12_mid_cast_fu_1133_p1;
wire   [3:0] p_shl1_mid1_fu_1145_p3;
wire   [4:0] p_shl1_cast_mid1_fu_1152_p1;
wire   [4:0] y_cast2_mid1_fu_1142_p1;
wire   [4:0] x_cast3_mid2_cast_fu_1117_p1;
wire   [4:0] tmp_4_mid1_fu_1156_p2;
wire  signed [4:0] tmp4_mid1_fu_1162_p2;
wire   [4:0] tmp4_cast_mid3_fu_1127_p3;
wire   [4:0] tmp4_cast_mid2_fu_1168_p3;
wire  signed [31:0] o_index_cast_mid_fu_1185_p1;
wire   [31:0] tmp_12_mid3_fu_1136_p3;
wire   [6:0] n_2_fu_1196_p2;
wire   [5:0] tmp_48_fu_1205_p1;
wire   [10:0] tmp_9_mid1_fu_1209_p3;
wire   [10:0] tmp_9_mid_fu_1179_p3;
wire   [8:0] p_shl2_mid1_fu_1224_p3;
wire   [9:0] n_cast_mid1_fu_1201_p1;
wire   [9:0] p_shl2_cast_mid1_fu_1232_p1;
wire   [9:0] tmp3_mid1_fu_1236_p2;
wire   [10:0] tmp3_cast_mid1_fu_1242_p1;
wire  signed [10:0] tmp4_cast_mid2_cast_fu_1175_p1;
wire   [10:0] o_index_mid1_fu_1246_p2;
wire  signed [31:0] o_index_cast_mid1_fu_1252_p1;
wire   [31:0] tmp_12_mid5_fu_1189_p3;
wire   [31:0] tmp_12_mid2_fu_1256_p3;
wire   [6:0] p_shl4_fu_1277_p3;
wire   [10:0] tmp_9_mid2_fu_1217_p3;
wire   [10:0] m_cast1_fu_1274_p1;
wire   [7:0] p_shl4_cast_fu_1284_p1;
wire   [7:0] tmp5_cast_fu_1294_p1;
wire   [7:0] tmp2_fu_1297_p2;
wire   [9:0] tmp2_cast_fu_1303_p1;
wire   [9:0] p_shl3_fu_1307_p3;
wire   [9:0] grp_fu_1327_p0;
wire   [3:0] grp_fu_1327_p1;
wire   [9:0] grp_fu_1339_p0;
wire   [3:0] grp_fu_1339_p1;
wire   [2:0] tmp_25_2_cast_mid2_v_2_fu_1357_p1;
wire   [2:0] tmp_25_2_cast_mid2_v_fu_1360_p2;
wire   [9:0] grp_fu_1380_p0;
wire   [3:0] grp_fu_1380_p1;
wire   [9:0] grp_fu_1391_p0;
wire   [3:0] grp_fu_1391_p1;
wire   [9:0] tmp1_0_2_fu_1397_p2;
wire   [9:0] grp_fu_1407_p0;
wire   [3:0] grp_fu_1407_p1;
wire   [9:0] grp_fu_1417_p0;
wire   [3:0] grp_fu_1417_p1;
wire   [3:0] grp_fu_1437_p1;
wire   [3:0] grp_fu_1442_p1;
wire   [3:0] grp_fu_1452_p1;
wire   [21:0] mul16_fu_2297_p2;
wire   [21:0] mul19_fu_2304_p2;
wire  signed [9:0] newIndex29_fu_1481_p1;
wire   [13:0] p_shl_fu_1496_p3;
wire   [14:0] p_shl_cast_fu_1503_p1;
wire   [14:0] tmp_15_cast2_fu_1493_p1;
wire   [14:0] w_index_0_1_fu_1518_p2;
wire  signed [9:0] newIndex19_fu_1529_p1;
wire   [21:0] mul13_fu_2311_p2;
wire   [21:0] mul14_fu_2318_p2;
wire   [21:0] mul15_fu_2325_p2;
wire   [14:0] w_index_1_fu_1577_p2;
wire  signed [9:0] newIndex22_fu_1587_p1;
wire  signed [9:0] newIndex24_fu_1599_p1;
wire   [14:0] w_index_1_1_fu_1611_p2;
wire   [21:0] mul17_fu_2332_p2;
wire   [14:0] w_index_1_2_fu_1633_p2;
wire   [21:0] mul18_fu_2339_p2;
wire   [21:0] mul20_fu_2346_p2;
wire   [9:0] grp_fu_1327_p2;
wire   [31:0] tmp_21_fu_1671_p6;
wire  signed [9:0] newIndex26_fu_1687_p1;
wire   [9:0] grp_fu_1339_p2;
wire   [31:0] tmp_26_fu_1703_p6;
wire   [14:0] w_index_2_fu_1719_p2;
wire   [14:0] w_index_2_1_fu_1729_p2;
wire   [21:0] mul_fu_2353_p2;
wire  signed [25:0] p_Val2_s_fu_2360_p2;
wire   [9:0] grp_fu_1380_p2;
wire   [31:0] tmp_23_fu_1771_p6;
wire  signed [25:0] p_Val2_3_1_fu_2367_p2;
wire  signed [9:0] newIndex31_fu_1802_p1;
wire  signed [9:0] newIndex27_fu_1814_p1;
wire   [9:0] grp_fu_1391_p2;
wire   [31:0] tmp_29_fu_1830_p6;
wire   [14:0] w_index_2_2_fu_1846_p2;
wire  signed [25:0] p_Val2_3_0_1_fu_2374_p2;
wire   [9:0] grp_fu_1407_p2;
wire   [31:0] tmp_24_fu_1875_p6;
wire   [9:0] grp_fu_1417_p2;
wire   [31:0] tmp_27_fu_1895_p6;
wire  signed [25:0] p_Val2_3_2_fu_2381_p2;
wire  signed [9:0] newIndex11_fu_1927_p1;
wire   [14:0] w_index_0_2_fu_1939_p2;
wire   [9:0] grp_fu_1437_p2;
wire   [31:0] tmp_28_fu_1953_p6;
wire   [9:0] grp_fu_1442_p2;
wire   [31:0] tmp_30_fu_1973_p6;
wire  signed [9:0] newIndex_fu_1989_p1;
wire   [9:0] grp_fu_1452_p2;
wire   [31:0] tmp_31_fu_2005_p6;
wire  signed [25:0] p_Val2_3_0_2_fu_2388_p2;
wire  signed [25:0] p_Val2_3_1_1_fu_2395_p2;
wire  signed [25:0] p_Val2_3_1_2_fu_2402_p2;
wire  signed [25:0] p_Val2_3_2_1_fu_2409_p2;
wire  signed [25:0] p_Val2_3_2_2_fu_2416_p2;
wire   [13:0] tmp9_fu_2101_p2;
wire   [13:0] tmp8_fu_2105_p2;
wire   [13:0] tmp13_fu_2119_p2;
wire   [13:0] tmp12_fu_2123_p2;
wire   [13:0] tmp10_fu_2128_p2;
wire   [5:0] tmp_59_fu_2154_p1;
wire   [8:0] p_shl5_fu_2158_p3;
wire   [9:0] p_shl5_cast_fu_2166_p1;
wire   [9:0] n1_cast_fu_2138_p1;
wire   [3:0] p_shl6_fu_2224_p3;
wire   [4:0] p_shl6_cast_fu_2232_p1;
wire   [4:0] y3_cast_fu_2208_p1;
wire   [4:0] tmp_17_fu_2236_p2;
wire   [4:0] tmp15_fu_2242_p2;
wire  signed [10:0] tmp15_cast_fu_2247_p1;
wire   [10:0] index_fu_2251_p2;
wire  signed [31:0] index_cast_fu_2256_p1;
wire   [12:0] tmp_60_fu_2265_p1;
wire   [13:0] p_Val2_2_fu_2269_p2;
wire   [0:0] tmp_20_fu_2279_p2;
wire   [12:0] p_Val2_2_cast_fu_2274_p2;
wire   [11:0] mul16_fu_2297_p0;
wire   [9:0] mul16_fu_2297_p1;
wire   [11:0] mul19_fu_2304_p0;
wire   [9:0] mul19_fu_2304_p1;
wire   [11:0] mul13_fu_2311_p0;
wire   [9:0] mul13_fu_2311_p1;
wire   [11:0] mul14_fu_2318_p0;
wire   [9:0] mul14_fu_2318_p1;
wire   [11:0] mul15_fu_2325_p0;
wire   [9:0] mul15_fu_2325_p1;
wire   [11:0] mul17_fu_2332_p0;
wire   [9:0] mul17_fu_2332_p1;
wire   [11:0] mul18_fu_2339_p0;
wire   [9:0] mul18_fu_2339_p1;
wire   [11:0] mul20_fu_2346_p0;
wire   [9:0] mul20_fu_2346_p1;
wire   [11:0] mul_fu_2353_p0;
wire   [9:0] mul_fu_2353_p1;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [21:0] mul13_fu_2311_p10;
wire   [21:0] mul14_fu_2318_p10;
wire   [21:0] mul15_fu_2325_p10;
wire   [21:0] mul16_fu_2297_p10;
wire   [21:0] mul17_fu_2332_p10;
wire   [21:0] mul18_fu_2339_p10;
wire   [21:0] mul19_fu_2304_p10;
wire   [21:0] mul20_fu_2346_p10;
wire   [21:0] mul_fu_2353_p10;
reg    ap_condition_1880;
reg    ap_condition_451;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

perform_conv_w_comb6 #(
    .DataWidth( 12 ),
    .AddressRange( 18432 ),
    .AddressWidth( 15 ))
w_conv23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w_conv23_address0),
    .ce0(w_conv23_ce0),
    .q0(w_conv23_q0),
    .address1(w_conv23_address1),
    .ce1(w_conv23_ce1),
    .q1(w_conv23_q1)
);

perform_conv_b_concg #(
    .DataWidth( 9 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
b_conv24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_conv24_address0),
    .ce0(b_conv24_ce0),
    .q0(b_conv24_q0)
);

dut_urem_10ns_4nsocq #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
dut_urem_10ns_4nsocq_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1327_p0),
    .din1(grp_fu_1327_p1),
    .ce(1'b1),
    .dout(grp_fu_1327_p2)
);

dut_urem_10ns_4nsocq #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
dut_urem_10ns_4nsocq_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1339_p0),
    .din1(grp_fu_1339_p1),
    .ce(1'b1),
    .dout(grp_fu_1339_p2)
);

dut_urem_10ns_4nsocq #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
dut_urem_10ns_4nsocq_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1380_p0),
    .din1(grp_fu_1380_p1),
    .ce(1'b1),
    .dout(grp_fu_1380_p2)
);

dut_urem_10ns_4nsocq #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
dut_urem_10ns_4nsocq_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1391_p0),
    .din1(grp_fu_1391_p1),
    .ce(1'b1),
    .dout(grp_fu_1391_p2)
);

dut_urem_10ns_4nsocq #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
dut_urem_10ns_4nsocq_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1407_p0),
    .din1(grp_fu_1407_p1),
    .ce(1'b1),
    .dout(grp_fu_1407_p2)
);

dut_urem_10ns_4nsocq #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
dut_urem_10ns_4nsocq_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1417_p0),
    .din1(grp_fu_1417_p1),
    .ce(1'b1),
    .dout(grp_fu_1417_p2)
);

dut_urem_10ns_4nsocq #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
dut_urem_10ns_4nsocq_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_index_1_2_reg_2637),
    .din1(grp_fu_1437_p1),
    .ce(1'b1),
    .dout(grp_fu_1437_p2)
);

dut_urem_10ns_4nsocq #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
dut_urem_10ns_4nsocq_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_index_2_1_reg_2643),
    .din1(grp_fu_1442_p1),
    .ce(1'b1),
    .dout(grp_fu_1442_p2)
);

dut_urem_10ns_4nsocq #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
dut_urem_10ns_4nsocq_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_index_2_2_reg_2649),
    .din1(grp_fu_1452_p1),
    .ce(1'b1),
    .dout(grp_fu_1452_p2)
);

dut_mux_532_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 14 ),
    .din5_WIDTH( 32 ),
    .dout_WIDTH( 14 ))
dut_mux_532_14_1_1_U62(
    .din0(input_0_V_q1),
    .din1(input_1_V_q1),
    .din2(input_2_V_q1),
    .din3(input_3_V_q1),
    .din4(input_4_V_q1),
    .din5(tmp_21_fu_1671_p6),
    .dout(tmp_21_fu_1671_p7)
);

dut_mux_532_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 14 ),
    .din5_WIDTH( 32 ),
    .dout_WIDTH( 14 ))
dut_mux_532_14_1_1_U63(
    .din0(reg_784),
    .din1(reg_789),
    .din2(reg_794),
    .din3(reg_799),
    .din4(reg_804),
    .din5(tmp_26_fu_1703_p6),
    .dout(tmp_26_fu_1703_p7)
);

dut_mux_532_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 14 ),
    .din5_WIDTH( 32 ),
    .dout_WIDTH( 14 ))
dut_mux_532_14_1_1_U64(
    .din0(reg_784),
    .din1(reg_789),
    .din2(reg_794),
    .din3(reg_799),
    .din4(reg_804),
    .din5(tmp_23_fu_1771_p6),
    .dout(tmp_23_fu_1771_p7)
);

dut_mux_532_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 14 ),
    .din5_WIDTH( 32 ),
    .dout_WIDTH( 14 ))
dut_mux_532_14_1_1_U65(
    .din0(reg_813),
    .din1(reg_818),
    .din2(reg_823),
    .din3(reg_828),
    .din4(reg_833),
    .din5(tmp_29_fu_1830_p6),
    .dout(tmp_29_fu_1830_p7)
);

dut_mux_532_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 14 ),
    .din5_WIDTH( 32 ),
    .dout_WIDTH( 14 ))
dut_mux_532_14_1_1_U66(
    .din0(reg_813),
    .din1(reg_818),
    .din2(reg_823),
    .din3(reg_828),
    .din4(reg_833),
    .din5(tmp_24_fu_1875_p6),
    .dout(tmp_24_fu_1875_p7)
);

dut_mux_532_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 14 ),
    .din5_WIDTH( 32 ),
    .dout_WIDTH( 14 ))
dut_mux_532_14_1_1_U67(
    .din0(input_0_V_q0),
    .din1(input_1_V_q0),
    .din2(input_2_V_q0),
    .din3(input_3_V_q0),
    .din4(input_4_V_q0),
    .din5(tmp_27_fu_1895_p6),
    .dout(tmp_27_fu_1895_p7)
);

dut_mux_532_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 14 ),
    .din5_WIDTH( 32 ),
    .dout_WIDTH( 14 ))
dut_mux_532_14_1_1_U68(
    .din0(reg_813),
    .din1(reg_818),
    .din2(reg_823),
    .din3(reg_828),
    .din4(reg_833),
    .din5(tmp_28_fu_1953_p6),
    .dout(tmp_28_fu_1953_p7)
);

dut_mux_532_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 14 ),
    .din5_WIDTH( 32 ),
    .dout_WIDTH( 14 ))
dut_mux_532_14_1_1_U69(
    .din0(input_0_V_q1),
    .din1(input_1_V_q1),
    .din2(input_2_V_q1),
    .din3(input_3_V_q1),
    .din4(input_4_V_q1),
    .din5(tmp_30_fu_1973_p6),
    .dout(tmp_30_fu_1973_p7)
);

dut_mux_532_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 14 ),
    .din5_WIDTH( 32 ),
    .dout_WIDTH( 14 ))
dut_mux_532_14_1_1_U70(
    .din0(input_0_V_q0),
    .din1(input_1_V_q0),
    .din2(input_2_V_q0),
    .din3(input_3_V_q0),
    .din4(input_4_V_q0),
    .din5(tmp_31_fu_2005_p6),
    .dout(tmp_31_fu_2005_p7)
);

dut_mul_mul_12ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
dut_mul_mul_12ns_kbM_U71(
    .din0(mul16_fu_2297_p0),
    .din1(mul16_fu_2297_p1),
    .dout(mul16_fu_2297_p2)
);

dut_mul_mul_12ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
dut_mul_mul_12ns_kbM_U72(
    .din0(mul19_fu_2304_p0),
    .din1(mul19_fu_2304_p1),
    .dout(mul19_fu_2304_p2)
);

dut_mul_mul_12ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
dut_mul_mul_12ns_kbM_U73(
    .din0(mul13_fu_2311_p0),
    .din1(mul13_fu_2311_p1),
    .dout(mul13_fu_2311_p2)
);

dut_mul_mul_12ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
dut_mul_mul_12ns_kbM_U74(
    .din0(mul14_fu_2318_p0),
    .din1(mul14_fu_2318_p1),
    .dout(mul14_fu_2318_p2)
);

dut_mul_mul_12ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
dut_mul_mul_12ns_kbM_U75(
    .din0(mul15_fu_2325_p0),
    .din1(mul15_fu_2325_p1),
    .dout(mul15_fu_2325_p2)
);

dut_mul_mul_12ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
dut_mul_mul_12ns_kbM_U76(
    .din0(mul17_fu_2332_p0),
    .din1(mul17_fu_2332_p1),
    .dout(mul17_fu_2332_p2)
);

dut_mul_mul_12ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
dut_mul_mul_12ns_kbM_U77(
    .din0(mul18_fu_2339_p0),
    .din1(mul18_fu_2339_p1),
    .dout(mul18_fu_2339_p2)
);

dut_mul_mul_12ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
dut_mul_mul_12ns_kbM_U78(
    .din0(mul20_fu_2346_p0),
    .din1(mul20_fu_2346_p1),
    .dout(mul20_fu_2346_p2)
);

dut_mul_mul_12ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
dut_mul_mul_12ns_kbM_U79(
    .din0(mul_fu_2353_p0),
    .din1(mul_fu_2353_p1),
    .dout(mul_fu_2353_p2)
);

dut_mul_mul_14s_1pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
dut_mul_mul_14s_1pcA_U80(
    .din0(tmp_21_reg_2846),
    .din1(reg_809),
    .dout(p_Val2_s_fu_2360_p2)
);

dut_mul_mul_14s_1pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
dut_mul_mul_14s_1pcA_U81(
    .din0(tmp_26_reg_2876),
    .din1(w_conv23_load_3_reg_2816),
    .dout(p_Val2_3_1_fu_2367_p2)
);

dut_mul_mul_14s_1pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
dut_mul_mul_14s_1pcA_U82(
    .din0(tmp_23_reg_2911),
    .din1(w_conv23_load_1_reg_2751),
    .dout(p_Val2_3_0_1_fu_2374_p2)
);

dut_mul_mul_14s_1pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
dut_mul_mul_14s_1pcA_U83(
    .din0(tmp_29_reg_2971),
    .din1(reg_809),
    .dout(p_Val2_3_2_fu_2381_p2)
);

dut_mul_mul_14s_1pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
dut_mul_mul_14s_1pcA_U84(
    .din0(tmp_24_reg_2991),
    .din1(w_conv23_load_2_reg_3076),
    .dout(p_Val2_3_0_2_fu_2388_p2)
);

dut_mul_mul_14s_1pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
dut_mul_mul_14s_1pcA_U85(
    .din0(tmp_27_reg_2996),
    .din1(w_conv23_load_4_reg_2881),
    .dout(p_Val2_3_1_1_fu_2395_p2)
);

dut_mul_mul_14s_1pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
dut_mul_mul_14s_1pcA_U86(
    .din0(tmp_28_reg_3041),
    .din1(w_conv23_load_5_reg_2886),
    .dout(p_Val2_3_1_2_fu_2402_p2)
);

dut_mul_mul_14s_1pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
dut_mul_mul_14s_1pcA_U87(
    .din0(tmp_30_reg_3046),
    .din1(w_conv23_load_7_reg_2976),
    .dout(p_Val2_3_2_1_fu_2409_p2)
);

dut_mul_mul_14s_1pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
dut_mul_mul_14s_1pcA_U88(
    .din0(tmp_31_reg_3081),
    .din1(w_conv23_load_8_reg_3031),
    .dout(p_Val2_3_2_2_fu_2416_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond1_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((exitcond1_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_838_p2 == 1'd0))) begin
        i_reg_662 <= i_1_fu_844_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_662 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten3_reg_673 <= 15'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten3_reg_673 <= indvar_flatten_next4_reg_2458;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten4_reg_696 <= 14'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten4_reg_696 <= indvar_flatten_next3_reg_2596;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_718 <= 13'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_718 <= indvar_flatten_next_reg_2591;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        m_reg_740 <= 6'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_reg_740 <= m_1_reg_2655;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        n1_reg_751 <= 7'd0;
    end else if (((exitcond7_fu_2196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        n1_reg_751 <= n_1_reg_3134;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        n_reg_729 <= 7'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        n_reg_729 <= n_mid2_reg_2556;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if ((1'b1 == ap_condition_451)) begin
            reg_784 <= input_0_V_q0;
        end else if ((1'b1 == ap_condition_1880)) begin
            reg_784 <= input_0_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if ((1'b1 == ap_condition_451)) begin
            reg_789 <= input_1_V_q0;
        end else if ((1'b1 == ap_condition_1880)) begin
            reg_789 <= input_1_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if ((1'b1 == ap_condition_451)) begin
            reg_794 <= input_2_V_q0;
        end else if ((1'b1 == ap_condition_1880)) begin
            reg_794 <= input_2_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if ((1'b1 == ap_condition_451)) begin
            reg_799 <= input_3_V_q0;
        end else if ((1'b1 == ap_condition_1880)) begin
            reg_799 <= input_3_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if ((1'b1 == ap_condition_451)) begin
            reg_804 <= input_4_V_q0;
        end else if ((1'b1 == ap_condition_1880)) begin
            reg_804 <= input_4_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0))) begin
        reg_813 <= input_0_V_q1;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_813 <= input_0_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0))) begin
        reg_818 <= input_1_V_q1;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_818 <= input_1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0))) begin
        reg_823 <= input_2_V_q1;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_823 <= input_2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0))) begin
        reg_828 <= input_3_V_q1;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_828 <= input_3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0))) begin
        reg_833 <= input_4_V_q1;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_833 <= input_4_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_2212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        x2_reg_762 <= x_3_reg_3172;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        x2_reg_762 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        x_reg_684 <= 2'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_reg_684 <= x_cast2_mid2_reg_2538;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (exitcond7_fu_2196_p2 == 1'd0))) begin
        y3_reg_773 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        y3_reg_773 <= y_3_reg_3180;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        y_reg_707 <= 2'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_reg_707 <= y_cast_mid2_reg_2500;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_fu_945_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond9_mid1_reg_2505 <= exitcond9_mid1_fu_1059_p2;
        exitcond_flatten_mid_reg_2476 <= exitcond_flatten_mid_fu_1009_p2;
        exitcond_flatten_reg_2463 <= exitcond_flatten_fu_957_p2;
        indvar_flatten35_op_reg_2533 <= indvar_flatten35_op_fu_1101_p2;
        indvar_flatten_op_reg_2528 <= indvar_flatten_op_fu_1095_p2;
        m_mid2_reg_2512 <= m_mid2_fu_1077_p3;
        n_mid_reg_2494 <= n_mid_fu_1027_p3;
        tmp5_reg_2523 <= tmp5_fu_1089_p2;
        tmp_22_reg_2488 <= tmp_22_fu_1021_p2;
        tmp_25_1_cast_mid2_reg_2471 <= tmp_25_1_cast_mid2_fu_977_p3;
        tmp_49_reg_2518 <= tmp_49_fu_1085_p1;
        y_2_reg_2482 <= y_2_fu_1015_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten4_reg_2454 <= exitcond_flatten4_fu_945_p2;
        exitcond_flatten4_reg_2454_pp0_iter1_reg <= exitcond_flatten4_reg_2454;
        exitcond_flatten4_reg_2454_pp0_iter2_reg <= exitcond_flatten4_reg_2454_pp0_iter1_reg;
        exitcond_flatten4_reg_2454_pp0_iter3_reg <= exitcond_flatten4_reg_2454_pp0_iter2_reg;
        exitcond_flatten4_reg_2454_pp0_iter4_reg <= exitcond_flatten4_reg_2454_pp0_iter3_reg;
        o_index_cast_reg_2449 <= o_index_cast_fu_941_p1;
        tmp4_reg_2439 <= tmp4_fu_887_p2;
        tmp_9_reg_2444[10 : 5] <= tmp_9_fu_905_p3[10 : 5];
        x_4_reg_2432 <= x_4_fu_859_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        i_index_0_1_reg_2613 <= i_index_0_1_fu_1375_p2;
        i_index_2_reg_2619 <= i_index_2_fu_1386_p2;
        tmp1_0_1_reg_2607 <= tmp1_0_1_fu_1370_p2;
        tmp_25_2_cast_mid2_reg_2601[2 : 0] <= tmp_25_2_cast_mid2_fu_1366_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        i_index_0_1_reg_2613_pp0_iter1_reg <= i_index_0_1_reg_2613;
        i_index_2_reg_2619_pp0_iter1_reg <= i_index_2_reg_2619;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        i_index_0_2_reg_2625 <= i_index_0_2_fu_1402_p2;
        i_index_1_1_reg_2631 <= i_index_1_1_fu_1413_p2;
        i_index_1_2_reg_2637 <= i_index_1_2_fu_1423_p2;
        i_index_2_1_reg_2643 <= i_index_2_1_fu_1428_p2;
        i_index_2_2_reg_2649 <= i_index_2_2_fu_1432_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        i_index_0_2_reg_2625_pp0_iter1_reg <= i_index_0_2_reg_2625;
        i_index_1_1_reg_2631_pp0_iter1_reg <= i_index_1_1_reg_2631;
        i_index_1_2_reg_2637_pp0_iter1_reg <= i_index_1_2_reg_2637;
        i_index_2_1_reg_2643_pp0_iter1_reg <= i_index_2_1_reg_2643;
        i_index_2_2_reg_2649_pp0_iter1_reg <= i_index_2_2_reg_2649;
        i_index_2_2_reg_2649_pp0_iter2_reg <= i_index_2_2_reg_2649_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        i_index_1_reg_2585 <= i_index_1_fu_1333_p2;
        i_index_reg_2574 <= i_index_fu_1321_p2;
        output_V_addr_3_reg_2580 <= tmp_12_mid2_cast_fu_1263_p1;
        tmp1_reg_2567 <= tmp1_fu_1315_p2;
        tmp_14_reg_2561 <= tmp_14_fu_1288_p2;
        tmp_25_1_cast_mid2_c_reg_2550[1 : 0] <= tmp_25_1_cast_mid2_c_fu_1121_p1[1 : 0];
        x_cast2_mid2_cast_reg_2544[1 : 0] <= x_cast2_mid2_cast_fu_1113_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        i_index_1_reg_2585_pp0_iter1_reg <= i_index_1_reg_2585;
        i_index_reg_2574_pp0_iter1_reg <= i_index_reg_2574;
        i_index_reg_2574_pp0_iter2_reg <= i_index_reg_2574_pp0_iter1_reg;
        output_V_addr_3_reg_2580_pp0_iter1_reg <= output_V_addr_3_reg_2580;
        output_V_addr_3_reg_2580_pp0_iter2_reg <= output_V_addr_3_reg_2580_pp0_iter1_reg;
        output_V_addr_3_reg_2580_pp0_iter3_reg <= output_V_addr_3_reg_2580_pp0_iter2_reg;
        output_V_addr_3_reg_2580_pp0_iter4_reg <= output_V_addr_3_reg_2580_pp0_iter3_reg;
        tmp_14_reg_2561_pp0_iter1_reg <= tmp_14_reg_2561;
        tmp_15_reg_2695_pp0_iter3_reg <= tmp_15_reg_2695;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        indvar_flatten_next3_reg_2596 <= indvar_flatten_next3_fu_1351_p3;
        indvar_flatten_next_reg_2591 <= indvar_flatten_next_fu_1345_p3;
        n_mid2_reg_2556 <= n_mid2_fu_1268_p3;
        x_cast2_mid2_reg_2538 <= x_cast2_mid2_fu_1107_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_next4_reg_2458 <= indvar_flatten_next4_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        m_1_reg_2655 <= m_1_fu_1447_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        n_1_reg_3134 <= n_1_fu_2148_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (exitcond_fu_2212_p2 == 1'd0))) begin
        output_V_addr_4_reg_3185 <= tmp_18_fu_2260_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        p_Val2_2_s_reg_3190 <= p_Val2_2_s_fu_2285_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        p_Val2_3_cast_reg_3149[8 : 0] <= p_Val2_3_cast_fu_2181_p1[8 : 0];
        tmp14_cast_reg_3154[9 : 0] <= tmp14_cast_fu_2185_p1[9 : 0];
        tmp_19_reg_3159[8 : 0] <= tmp_19_fu_2188_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0))) begin
        p_Val2_5_0_1_reg_2986 <= {{p_Val2_3_0_1_fu_2374_p2[25:12]}};
        p_Val2_5_2_reg_3001 <= {{p_Val2_3_2_fu_2381_p2[25:12]}};
        tmp_24_reg_2991 <= tmp_24_fu_1875_p7;
        tmp_27_reg_2996 <= tmp_27_fu_1895_p7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0))) begin
        p_Val2_5_0_2_reg_3086 <= {{p_Val2_3_0_2_fu_2388_p2[25:12]}};
        p_Val2_5_1_1_reg_3091 <= {{p_Val2_3_1_1_fu_2395_p2[25:12]}};
        p_Val2_5_1_2_reg_3096 <= {{p_Val2_3_1_2_fu_2402_p2[25:12]}};
        tmp7_reg_3101 <= tmp7_fu_2066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_5_1_reg_2916 <= {{p_Val2_3_1_fu_2367_p2[25:12]}};
        p_Val2_5_reg_2906 <= {{p_Val2_s_fu_2360_p2[25:12]}};
        tmp_23_reg_2911 <= tmp_23_fu_1771_p7;
        tmp_29_reg_2971 <= tmp_29_fu_1830_p7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_5_2_1_reg_3106 <= {{p_Val2_3_2_1_fu_2409_p2[25:12]}};
        p_Val2_5_2_2_reg_3111 <= {{p_Val2_3_2_2_fu_2416_p2[25:12]}};
        tmp11_reg_3121 <= tmp11_fu_2115_p2;
        tmp6_reg_3116 <= tmp6_fu_2110_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten4_reg_2454_pp0_iter4_reg == 1'd0))) begin
        p_Val2_6_2_2_reg_3126 <= p_Val2_6_2_2_fu_2133_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_809 <= w_conv23_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (exitcond8_fu_2142_p2 == 1'd0))) begin
        tmp14_reg_3144 <= tmp14_fu_2175_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0))) begin
        tmp_15_reg_2695 <= tmp_15_fu_1507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0))) begin
        tmp_21_reg_2846 <= tmp_21_fu_1671_p7;
        tmp_26_reg_2876 <= tmp_26_fu_1703_p7;
        tmp_58_reg_2901 <= {{mul_fu_2353_p2[21:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0))) begin
        tmp_28_reg_3041 <= tmp_28_fu_1953_p7;
        tmp_30_reg_3046 <= tmp_30_fu_1973_p7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0))) begin
        tmp_31_reg_3081 <= tmp_31_fu_2005_p7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0))) begin
        tmp_50_reg_2741 <= {{mul13_fu_2311_p2[21:13]}};
        tmp_51_reg_2746 <= {{mul14_fu_2318_p2[21:13]}};
        tmp_52_reg_2756 <= {{mul15_fu_2325_p2[21:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454_pp0_iter1_reg == 1'd0))) begin
        tmp_53_reg_2660 <= {{mul16_fu_2297_p2[21:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0))) begin
        tmp_54_reg_2821 <= {{mul17_fu_2332_p2[21:13]}};
        tmp_55_reg_2831 <= {{mul18_fu_2339_p2[21:13]}};
        tmp_57_reg_2841 <= {{mul20_fu_2346_p2[21:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten4_reg_2454_pp0_iter1_reg == 1'd0))) begin
        tmp_56_reg_2665 <= {{mul19_fu_2304_p2[21:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0))) begin
        w_conv23_load_1_reg_2751 <= w_conv23_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0))) begin
        w_conv23_load_2_reg_3076 <= w_conv23_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0))) begin
        w_conv23_load_3_reg_2816 <= w_conv23_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0))) begin
        w_conv23_load_4_reg_2881 <= w_conv23_q0;
        w_conv23_load_5_reg_2886 <= w_conv23_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_conv23_load_7_reg_2976 <= w_conv23_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten4_reg_2454_pp0_iter3_reg == 1'd0))) begin
        w_conv23_load_8_reg_3031 <= w_conv23_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        x2_cast_reg_3164[1 : 0] <= x2_cast_fu_2192_p1[1 : 0];
        x_3_reg_3172 <= x_3_fu_2202_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        y_3_reg_3180 <= y_3_fu_2218_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_fu_945_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_cast_mid2_reg_2500 <= y_cast_mid2_fu_1035_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten4_fu_945_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond8_fu_2142_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        ap_phi_mux_indvar_flatten3_phi_fu_677_p4 = indvar_flatten_next4_reg_2458;
    end else begin
        ap_phi_mux_indvar_flatten3_phi_fu_677_p4 = indvar_flatten3_reg_673;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        ap_phi_mux_indvar_flatten4_phi_fu_700_p4 = indvar_flatten_next3_reg_2596;
    end else begin
        ap_phi_mux_indvar_flatten4_phi_fu_700_p4 = indvar_flatten4_reg_696;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_722_p4 = indvar_flatten_next_reg_2591;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_722_p4 = indvar_flatten_reg_718;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        ap_phi_mux_m_phi_fu_744_p4 = m_1_reg_2655;
    end else begin
        ap_phi_mux_m_phi_fu_744_p4 = m_reg_740;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        ap_phi_mux_n_phi_fu_733_p4 = n_mid2_reg_2556;
    end else begin
        ap_phi_mux_n_phi_fu_733_p4 = n_reg_729;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        ap_phi_mux_x_phi_fu_688_p4 = x_cast2_mid2_reg_2538;
    end else begin
        ap_phi_mux_x_phi_fu_688_p4 = x_reg_684;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454 == 1'd0))) begin
        ap_phi_mux_y_phi_fu_711_p4 = y_cast_mid2_reg_2500;
    end else begin
        ap_phi_mux_y_phi_fu_711_p4 = y_reg_707;
    end
end

always @ (*) begin
    if (((exitcond8_fu_2142_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        b_conv24_ce0 = 1'b1;
    end else begin
        b_conv24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_0_V_address0 = newIndex5_fu_1992_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_V_address0 = newIndex32_fu_1805_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_0_V_address0 = newIndex28_fu_1690_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_0_V_address0 = newIndex25_fu_1602_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_0_V_address0 = newIndex34_fu_1532_p1;
    end else begin
        input_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_0_V_address1 = newIndex35_fu_1930_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_V_address1 = newIndex33_fu_1817_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_0_V_address1 = newIndex23_fu_1590_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_0_V_address1 = newIndex30_fu_1484_p1;
    end else begin
        input_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_0_V_ce0 = 1'b1;
    end else begin
        input_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_0_V_ce1 = 1'b1;
    end else begin
        input_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_1_V_address0 = newIndex5_fu_1992_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_1_V_address0 = newIndex32_fu_1805_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_1_V_address0 = newIndex28_fu_1690_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_1_V_address0 = newIndex25_fu_1602_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_1_V_address0 = newIndex34_fu_1532_p1;
    end else begin
        input_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_1_V_address1 = newIndex35_fu_1930_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_1_V_address1 = newIndex33_fu_1817_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_1_V_address1 = newIndex23_fu_1590_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_1_V_address1 = newIndex30_fu_1484_p1;
    end else begin
        input_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_1_V_ce0 = 1'b1;
    end else begin
        input_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_1_V_ce1 = 1'b1;
    end else begin
        input_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_2_V_address0 = newIndex5_fu_1992_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_2_V_address0 = newIndex32_fu_1805_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_2_V_address0 = newIndex28_fu_1690_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_2_V_address0 = newIndex25_fu_1602_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_2_V_address0 = newIndex34_fu_1532_p1;
    end else begin
        input_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_2_V_address1 = newIndex35_fu_1930_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_2_V_address1 = newIndex33_fu_1817_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_2_V_address1 = newIndex23_fu_1590_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_2_V_address1 = newIndex30_fu_1484_p1;
    end else begin
        input_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_2_V_ce0 = 1'b1;
    end else begin
        input_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_2_V_ce1 = 1'b1;
    end else begin
        input_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_3_V_address0 = newIndex5_fu_1992_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_3_V_address0 = newIndex32_fu_1805_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_3_V_address0 = newIndex28_fu_1690_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_3_V_address0 = newIndex25_fu_1602_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_3_V_address0 = newIndex34_fu_1532_p1;
    end else begin
        input_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_3_V_address1 = newIndex35_fu_1930_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_3_V_address1 = newIndex33_fu_1817_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_3_V_address1 = newIndex23_fu_1590_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_3_V_address1 = newIndex30_fu_1484_p1;
    end else begin
        input_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_3_V_ce0 = 1'b1;
    end else begin
        input_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_3_V_ce1 = 1'b1;
    end else begin
        input_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_4_V_address0 = newIndex5_fu_1992_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_4_V_address0 = newIndex32_fu_1805_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_4_V_address0 = newIndex28_fu_1690_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_4_V_address0 = newIndex25_fu_1602_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_4_V_address0 = newIndex34_fu_1532_p1;
    end else begin
        input_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_4_V_address1 = newIndex35_fu_1930_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_4_V_address1 = newIndex33_fu_1817_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_4_V_address1 = newIndex23_fu_1590_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_4_V_address1 = newIndex30_fu_1484_p1;
    end else begin
        input_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_4_V_ce0 = 1'b1;
    end else begin
        input_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_4_V_ce1 = 1'b1;
    end else begin
        input_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        output_V_address0 = output_V_addr_4_reg_3185;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        output_V_address0 = tmp_18_fu_2260_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        output_V_address0 = output_V_addr_3_reg_2580_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        output_V_address0 = output_V_addr_3_reg_2580_pp0_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_V_address0 = tmp_s_fu_850_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        output_V_d0 = p_Val2_2_cast_38_fu_2293_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        output_V_d0 = p_Val2_6_2_2_reg_3126;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_V_d0 = 14'd0;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_838_p2 == 1'd0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten4_reg_2454_pp0_iter4_reg == 1'd0)))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_conv23_address0 = tmp_29_2_2_fu_1851_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_conv23_address0 = tmp_29_2_fu_1724_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_conv23_address0 = tmp_29_1_1_fu_1616_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_conv23_address0 = tmp_29_1_fu_1582_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_conv23_address0 = tmp_16_fu_1513_p1;
    end else begin
        w_conv23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        w_conv23_address1 = tmp_29_0_2_fu_1944_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_conv23_address1 = tmp_29_2_1_fu_1734_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_conv23_address1 = tmp_29_1_2_fu_1638_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_conv23_address1 = tmp_29_0_1_fu_1524_p1;
    end else begin
        w_conv23_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        w_conv23_ce0 = 1'b1;
    end else begin
        w_conv23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        w_conv23_ce1 = 1'b1;
    end else begin
        w_conv23_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten4_fu_945_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten4_fu_945_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b0)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((exitcond8_fu_2142_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((exitcond7_fu_2196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((exitcond_fu_2212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd13];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1880 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten4_reg_2454_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_451 = ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond_flatten4_reg_2454_pp0_iter2_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign b_conv24_address0 = tmp_6_fu_2170_p1;

assign exitcond1_fu_838_p2 = ((i_reg_662 == 10'd800) ? 1'b1 : 1'b0);

assign exitcond2_fu_991_p2 = ((ap_phi_mux_m_phi_fu_744_p4 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond7_fu_2196_p2 = ((x2_reg_762 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond8_fu_2142_p2 = ((n1_reg_751 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond9_mid1_fu_1059_p2 = (not_exitcond_flatten_2_fu_1053_p2 & exitcond9_mid_fu_997_p2);

assign exitcond9_mid_fu_997_p2 = (not_exitcond_flatten_fu_985_p2 & exitcond2_fu_991_p2);

assign exitcond_flatten2_fu_1003_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_722_p4 == 13'd2048) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_945_p2 = ((ap_phi_mux_indvar_flatten3_phi_fu_677_p4 == 15'd18432) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_957_p2 = ((ap_phi_mux_indvar_flatten4_phi_fu_700_p4 == 14'd6144) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_fu_1009_p2 = (not_exitcond_flatten_fu_985_p2 & exitcond_flatten2_fu_1003_p2);

assign exitcond_flatten_not_fu_1047_p2 = (exitcond_flatten2_fu_1003_p2 ^ 1'd1);

assign exitcond_fu_2212_p2 = ((y3_reg_773 == 2'd3) ? 1'b1 : 1'b0);

assign grp_fu_1327_p0 = (tmp1_fu_1315_p2 + x_cast2_mid2_cast_fu_1113_p1);

assign grp_fu_1327_p1 = 10'd5;

assign grp_fu_1339_p0 = (tmp1_fu_1315_p2 + tmp_25_1_cast_mid2_c_fu_1121_p1);

assign grp_fu_1339_p1 = 10'd5;

assign grp_fu_1380_p0 = (tmp1_0_1_fu_1370_p2 + x_cast2_mid2_cast_reg_2544);

assign grp_fu_1380_p1 = 10'd5;

assign grp_fu_1391_p0 = (tmp1_reg_2567 + tmp_25_2_cast_mid2_fu_1366_p1);

assign grp_fu_1391_p1 = 10'd5;

assign grp_fu_1407_p0 = (tmp1_0_2_fu_1397_p2 + x_cast2_mid2_cast_reg_2544);

assign grp_fu_1407_p1 = 10'd5;

assign grp_fu_1417_p0 = (tmp1_0_1_reg_2607 + tmp_25_1_cast_mid2_c_reg_2550);

assign grp_fu_1417_p1 = 10'd5;

assign grp_fu_1437_p1 = 10'd5;

assign grp_fu_1442_p1 = 10'd5;

assign grp_fu_1452_p1 = 10'd5;

assign i_1_fu_844_p2 = (i_reg_662 + 10'd1);

assign i_index_0_1_fu_1375_p2 = (tmp1_0_1_fu_1370_p2 + x_cast2_mid2_cast_reg_2544);

assign i_index_0_2_fu_1402_p2 = (tmp1_0_2_fu_1397_p2 + x_cast2_mid2_cast_reg_2544);

assign i_index_1_1_fu_1413_p2 = (tmp1_0_1_reg_2607 + tmp_25_1_cast_mid2_c_reg_2550);

assign i_index_1_2_fu_1423_p2 = (tmp1_0_2_fu_1397_p2 + tmp_25_1_cast_mid2_c_reg_2550);

assign i_index_1_fu_1333_p2 = (tmp1_fu_1315_p2 + tmp_25_1_cast_mid2_c_fu_1121_p1);

assign i_index_2_1_fu_1428_p2 = (tmp1_0_1_reg_2607 + tmp_25_2_cast_mid2_reg_2601);

assign i_index_2_2_fu_1432_p2 = (tmp1_0_2_fu_1397_p2 + tmp_25_2_cast_mid2_reg_2601);

assign i_index_2_fu_1386_p2 = (tmp1_reg_2567 + tmp_25_2_cast_mid2_fu_1366_p1);

assign i_index_fu_1321_p2 = (tmp1_fu_1315_p2 + x_cast2_mid2_cast_fu_1113_p1);

assign index_cast_fu_2256_p1 = $signed(index_fu_2251_p2);

assign index_fu_2251_p2 = ($signed(tmp14_cast_reg_3154) + $signed(tmp15_cast_fu_2247_p1));

assign indvar_flatten35_op_fu_1101_p2 = (14'd1 + ap_phi_mux_indvar_flatten4_phi_fu_700_p4);

assign indvar_flatten_next3_fu_1351_p3 = ((exitcond_flatten_reg_2463[0:0] === 1'b1) ? 14'd1 : indvar_flatten35_op_reg_2533);

assign indvar_flatten_next4_fu_951_p2 = (15'd1 + ap_phi_mux_indvar_flatten3_phi_fu_677_p4);

assign indvar_flatten_next_fu_1345_p3 = ((tmp_22_reg_2488[0:0] === 1'b1) ? 13'd1 : indvar_flatten_op_reg_2528);

assign indvar_flatten_op_fu_1095_p2 = (13'd1 + ap_phi_mux_indvar_flatten_phi_fu_722_p4);

assign m_1_fu_1447_p2 = (6'd1 + m_mid2_reg_2512);

assign m_cast1_fu_1274_p1 = m_mid2_reg_2512;

assign m_mid2_fu_1077_p3 = ((tmp_47_fu_1071_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_m_phi_fu_744_p4);

assign mul13_fu_2311_p0 = 22'd1639;

assign mul13_fu_2311_p1 = mul13_fu_2311_p10;

assign mul13_fu_2311_p10 = i_index_reg_2574_pp0_iter2_reg;

assign mul14_fu_2318_p0 = 22'd1639;

assign mul14_fu_2318_p1 = mul14_fu_2318_p10;

assign mul14_fu_2318_p10 = i_index_0_1_reg_2613_pp0_iter1_reg;

assign mul15_fu_2325_p0 = 22'd1639;

assign mul15_fu_2325_p1 = mul15_fu_2325_p10;

assign mul15_fu_2325_p10 = i_index_0_2_reg_2625_pp0_iter1_reg;

assign mul16_fu_2297_p0 = 22'd1639;

assign mul16_fu_2297_p1 = mul16_fu_2297_p10;

assign mul16_fu_2297_p10 = i_index_1_reg_2585_pp0_iter1_reg;

assign mul17_fu_2332_p0 = 22'd1639;

assign mul17_fu_2332_p1 = mul17_fu_2332_p10;

assign mul17_fu_2332_p10 = i_index_1_1_reg_2631_pp0_iter1_reg;

assign mul18_fu_2339_p0 = 22'd1639;

assign mul18_fu_2339_p1 = mul18_fu_2339_p10;

assign mul18_fu_2339_p10 = i_index_1_2_reg_2637_pp0_iter1_reg;

assign mul19_fu_2304_p0 = 22'd1639;

assign mul19_fu_2304_p1 = mul19_fu_2304_p10;

assign mul19_fu_2304_p10 = i_index_2_reg_2619_pp0_iter1_reg;

assign mul20_fu_2346_p0 = 22'd1639;

assign mul20_fu_2346_p1 = mul20_fu_2346_p10;

assign mul20_fu_2346_p10 = i_index_2_1_reg_2643_pp0_iter1_reg;

assign mul_fu_2353_p0 = 22'd1639;

assign mul_fu_2353_p1 = mul_fu_2353_p10;

assign mul_fu_2353_p10 = i_index_2_2_reg_2649_pp0_iter2_reg;

assign n1_cast_fu_2138_p1 = n1_reg_751;

assign n_1_fu_2148_p2 = (n1_reg_751 + 7'd1);

assign n_2_fu_1196_p2 = (7'd1 + n_mid_reg_2494);

assign n_cast_fu_897_p1 = ap_phi_mux_n_phi_fu_733_p4;

assign n_cast_mid1_fu_1201_p1 = n_2_fu_1196_p2;

assign n_mid2_fu_1268_p3 = ((exitcond9_mid1_reg_2505[0:0] === 1'b1) ? n_2_fu_1196_p2 : n_mid_reg_2494);

assign n_mid_fu_1027_p3 = ((tmp_22_fu_1021_p2[0:0] === 1'b1) ? 7'd0 : ap_phi_mux_n_phi_fu_733_p4);

assign newIndex11_fu_1927_p1 = $signed(tmp_57_reg_2841);

assign newIndex19_fu_1529_p1 = $signed(tmp_56_reg_2665);

assign newIndex22_fu_1587_p1 = $signed(tmp_50_reg_2741);

assign newIndex23_fu_1590_p1 = $unsigned(newIndex22_fu_1587_p1);

assign newIndex24_fu_1599_p1 = $signed(tmp_51_reg_2746);

assign newIndex25_fu_1602_p1 = $unsigned(newIndex24_fu_1599_p1);

assign newIndex26_fu_1687_p1 = $signed(tmp_52_reg_2756);

assign newIndex27_fu_1814_p1 = $signed(tmp_55_reg_2831);

assign newIndex28_fu_1690_p1 = $unsigned(newIndex26_fu_1687_p1);

assign newIndex29_fu_1481_p1 = $signed(tmp_53_reg_2660);

assign newIndex30_fu_1484_p1 = $unsigned(newIndex29_fu_1481_p1);

assign newIndex31_fu_1802_p1 = $signed(tmp_54_reg_2821);

assign newIndex32_fu_1805_p1 = $unsigned(newIndex31_fu_1802_p1);

assign newIndex33_fu_1817_p1 = $unsigned(newIndex27_fu_1814_p1);

assign newIndex34_fu_1532_p1 = $unsigned(newIndex19_fu_1529_p1);

assign newIndex35_fu_1930_p1 = $unsigned(newIndex11_fu_1927_p1);

assign newIndex5_fu_1992_p1 = $unsigned(newIndex_fu_1989_p1);

assign newIndex_fu_1989_p1 = $signed(tmp_58_reg_2901);

assign not_exitcond_flatten_2_fu_1053_p2 = (exitcond_flatten_not_fu_1047_p2 | exitcond_flatten_fu_957_p2);

assign not_exitcond_flatten_fu_985_p2 = (exitcond_flatten_fu_957_p2 ^ 1'd1);

assign o_index_cast_fu_941_p1 = $signed(o_index_fu_935_p2);

assign o_index_cast_mid1_fu_1252_p1 = $signed(o_index_mid1_fu_1246_p2);

assign o_index_cast_mid_fu_1185_p1 = tmp4_mid1_fu_1162_p2;

assign o_index_fu_935_p2 = ($signed(tmp3_cast_fu_931_p1) + $signed(tmp4_cast_fu_893_p1));

assign o_index_mid1_fu_1246_p2 = ($signed(tmp3_cast_mid1_fu_1242_p1) + $signed(tmp4_cast_mid2_cast_fu_1175_p1));

assign p_Val2_2_cast_38_fu_2293_p1 = p_Val2_2_s_reg_3190;

assign p_Val2_2_cast_fu_2274_p2 = (tmp_60_fu_2265_p1 + tmp_19_reg_3159);

assign p_Val2_2_fu_2269_p2 = (p_Val2_3_cast_reg_3149 + output_V_q0);

assign p_Val2_2_s_fu_2285_p3 = ((tmp_20_fu_2279_p2[0:0] === 1'b1) ? p_Val2_2_cast_fu_2274_p2 : 13'd0);

assign p_Val2_3_cast_fu_2181_p1 = b_conv24_q0;

assign p_Val2_6_2_2_fu_2133_p2 = (tmp6_reg_3116 + tmp10_fu_2128_p2);

assign p_shl1_cast_fu_877_p1 = p_shl1_fu_869_p3;

assign p_shl1_cast_mid1_fu_1152_p1 = p_shl1_mid1_fu_1145_p3;

assign p_shl1_fu_869_p3 = {{ap_phi_mux_y_phi_fu_711_p4}, {2'd0}};

assign p_shl1_mid1_fu_1145_p3 = {{y_2_reg_2482}, {2'd0}};

assign p_shl2_cast_fu_921_p1 = p_shl2_fu_913_p3;

assign p_shl2_cast_mid1_fu_1232_p1 = p_shl2_mid1_fu_1224_p3;

assign p_shl2_fu_913_p3 = {{tmp_fu_901_p1}, {3'd0}};

assign p_shl2_mid1_fu_1224_p3 = {{tmp_48_fu_1205_p1}, {3'd0}};

assign p_shl3_fu_1307_p3 = {{tmp2_fu_1297_p2}, {2'd0}};

assign p_shl4_cast_fu_1284_p1 = p_shl4_fu_1277_p3;

assign p_shl4_fu_1277_p3 = {{tmp_49_reg_2518}, {2'd0}};

assign p_shl5_cast_fu_2166_p1 = p_shl5_fu_2158_p3;

assign p_shl5_fu_2158_p3 = {{tmp_59_fu_2154_p1}, {3'd0}};

assign p_shl6_cast_fu_2232_p1 = p_shl6_fu_2224_p3;

assign p_shl6_fu_2224_p3 = {{y3_reg_773}, {2'd0}};

assign p_shl_cast_fu_1503_p1 = p_shl_fu_1496_p3;

assign p_shl_fu_1496_p3 = {{tmp_14_reg_2561_pp0_iter1_reg}, {3'd0}};

assign tmp10_fu_2128_p2 = (tmp11_reg_3121 + tmp12_fu_2123_p2);

assign tmp11_fu_2115_p2 = (p_Val2_5_1_2_reg_3096 + p_Val2_5_1_1_reg_3091);

assign tmp12_fu_2123_p2 = (p_Val2_5_2_reg_3001 + tmp13_fu_2119_p2);

assign tmp13_fu_2119_p2 = (p_Val2_5_2_2_reg_3111 + p_Val2_5_2_1_reg_3106);

assign tmp14_cast_fu_2185_p1 = tmp14_reg_3144;

assign tmp14_fu_2175_p2 = (p_shl5_cast_fu_2166_p1 + n1_cast_fu_2138_p1);

assign tmp15_cast_fu_2247_p1 = $signed(tmp15_fu_2242_p2);

assign tmp15_fu_2242_p2 = (tmp_17_fu_2236_p2 + x2_cast_reg_3164);

assign tmp1_0_1_fu_1370_p2 = (10'd5 + tmp1_reg_2567);

assign tmp1_0_2_fu_1397_p2 = (10'd10 + tmp1_reg_2567);

assign tmp1_fu_1315_p2 = (tmp2_cast_fu_1303_p1 + p_shl3_fu_1307_p3);

assign tmp2_cast_fu_1303_p1 = tmp2_fu_1297_p2;

assign tmp2_fu_1297_p2 = (p_shl4_cast_fu_1284_p1 + tmp5_cast_fu_1294_p1);

assign tmp3_cast_fu_931_p1 = tmp3_fu_925_p2;

assign tmp3_cast_mid1_fu_1242_p1 = tmp3_mid1_fu_1236_p2;

assign tmp3_fu_925_p2 = (n_cast_fu_897_p1 + p_shl2_cast_fu_921_p1);

assign tmp3_mid1_fu_1236_p2 = (n_cast_mid1_fu_1201_p1 + p_shl2_cast_mid1_fu_1232_p1);

assign tmp4_cast_fu_893_p1 = tmp4_fu_887_p2;

assign tmp4_cast_mid2_cast_fu_1175_p1 = $signed(tmp4_cast_mid2_fu_1168_p3);

assign tmp4_cast_mid2_fu_1168_p3 = ((exitcond_flatten_mid_reg_2476[0:0] === 1'b1) ? tmp4_mid1_fu_1162_p2 : tmp4_cast_mid3_fu_1127_p3);

assign tmp4_cast_mid3_fu_1127_p3 = ((exitcond_flatten_reg_2463[0:0] === 1'b1) ? tmp4_cast_mid_cast_fu_1124_p1 : tmp4_reg_2439);

assign tmp4_cast_mid_cast_fu_1124_p1 = x_4_reg_2432;

assign tmp4_fu_887_p2 = (x_cast3_fu_855_p1 + tmp_4_fu_881_p2);

assign tmp4_mid1_fu_1162_p2 = (x_cast3_mid2_cast_fu_1117_p1 + tmp_4_mid1_fu_1156_p2);

assign tmp5_cast_fu_1294_p1 = tmp5_reg_2523;

assign tmp5_fu_1089_p2 = (y_cast_mid2_cast_fu_1043_p1 + m_mid2_fu_1077_p3);

assign tmp6_fu_2110_p2 = (tmp7_reg_3101 + tmp8_fu_2105_p2);

assign tmp7_fu_2066_p2 = (p_Val2_5_reg_2906 + output_V_q0);

assign tmp8_fu_2105_p2 = (p_Val2_5_0_1_reg_2986 + tmp9_fu_2101_p2);

assign tmp9_fu_2101_p2 = (p_Val2_5_1_reg_2916 + p_Val2_5_0_2_reg_3086);

assign tmp_12_mid2_cast_fu_1263_p1 = tmp_12_mid2_fu_1256_p3;

assign tmp_12_mid2_fu_1256_p3 = ((exitcond9_mid1_reg_2505[0:0] === 1'b1) ? o_index_cast_mid1_fu_1252_p1 : tmp_12_mid5_fu_1189_p3);

assign tmp_12_mid3_fu_1136_p3 = ((exitcond_flatten_reg_2463[0:0] === 1'b1) ? tmp_12_mid_cast_fu_1133_p1 : o_index_cast_reg_2449);

assign tmp_12_mid5_fu_1189_p3 = ((exitcond_flatten_mid_reg_2476[0:0] === 1'b1) ? o_index_cast_mid_fu_1185_p1 : tmp_12_mid3_fu_1136_p3);

assign tmp_12_mid_cast_fu_1133_p1 = x_4_reg_2432;

assign tmp_14_fu_1288_p2 = (tmp_9_mid2_fu_1217_p3 + m_cast1_fu_1274_p1);

assign tmp_15_cast2_fu_1493_p1 = tmp_14_reg_2561_pp0_iter1_reg;

assign tmp_15_fu_1507_p2 = (p_shl_cast_fu_1503_p1 + tmp_15_cast2_fu_1493_p1);

assign tmp_16_fu_1513_p1 = tmp_15_fu_1507_p2;

assign tmp_17_fu_2236_p2 = (p_shl6_cast_fu_2232_p1 - y3_cast_fu_2208_p1);

assign tmp_18_fu_2260_p1 = $unsigned(index_cast_fu_2256_p1);

assign tmp_19_fu_2188_p1 = b_conv24_q0;

assign tmp_20_fu_2279_p2 = (($signed(p_Val2_2_fu_2269_p2) > $signed(14'd0)) ? 1'b1 : 1'b0);

assign tmp_21_fu_1671_p6 = grp_fu_1327_p2;

assign tmp_22_fu_1021_p2 = (exitcond_flatten_mid_fu_1009_p2 | exitcond_flatten_fu_957_p2);

assign tmp_23_fu_1771_p6 = grp_fu_1380_p2;

assign tmp_24_fu_1875_p6 = grp_fu_1407_p2;

assign tmp_25_1_cast_mid2_c_fu_1121_p1 = tmp_25_1_cast_mid2_reg_2471;

assign tmp_25_1_cast_mid2_fu_977_p3 = ((exitcond_flatten_fu_957_p2[0:0] === 1'b1) ? x_4_mid1_fu_971_p2 : x_4_fu_859_p2);

assign tmp_25_2_cast_mid2_fu_1366_p1 = tmp_25_2_cast_mid2_v_fu_1360_p2;

assign tmp_25_2_cast_mid2_v_2_fu_1357_p1 = x_cast2_mid2_reg_2538;

assign tmp_25_2_cast_mid2_v_fu_1360_p2 = (3'd2 + tmp_25_2_cast_mid2_v_2_fu_1357_p1);

assign tmp_25_fu_1065_p2 = (exitcond_flatten_mid_fu_1009_p2 | exitcond9_mid1_fu_1059_p2);

assign tmp_26_fu_1703_p6 = grp_fu_1339_p2;

assign tmp_27_fu_1895_p6 = grp_fu_1417_p2;

assign tmp_28_fu_1953_p6 = grp_fu_1437_p2;

assign tmp_29_0_1_fu_1524_p1 = w_index_0_1_fu_1518_p2;

assign tmp_29_0_2_fu_1944_p1 = w_index_0_2_fu_1939_p2;

assign tmp_29_1_1_fu_1616_p1 = w_index_1_1_fu_1611_p2;

assign tmp_29_1_2_fu_1638_p1 = w_index_1_2_fu_1633_p2;

assign tmp_29_1_fu_1582_p1 = w_index_1_fu_1577_p2;

assign tmp_29_2_1_fu_1734_p1 = w_index_2_1_fu_1729_p2;

assign tmp_29_2_2_fu_1851_p1 = w_index_2_2_fu_1846_p2;

assign tmp_29_2_fu_1724_p1 = w_index_2_fu_1719_p2;

assign tmp_29_fu_1830_p6 = grp_fu_1391_p2;

assign tmp_30_fu_1973_p6 = grp_fu_1442_p2;

assign tmp_31_fu_2005_p6 = grp_fu_1452_p2;

assign tmp_47_fu_1071_p2 = (tmp_25_fu_1065_p2 | exitcond_flatten_fu_957_p2);

assign tmp_48_fu_1205_p1 = n_2_fu_1196_p2[5:0];

assign tmp_49_fu_1085_p1 = m_mid2_fu_1077_p3[4:0];

assign tmp_4_fu_881_p2 = (p_shl1_cast_fu_877_p1 - y_cast2_fu_865_p1);

assign tmp_4_mid1_fu_1156_p2 = (p_shl1_cast_mid1_fu_1152_p1 - y_cast2_mid1_fu_1142_p1);

assign tmp_59_fu_2154_p1 = n1_reg_751[5:0];

assign tmp_60_fu_2265_p1 = output_V_q0[12:0];

assign tmp_6_fu_2170_p1 = n1_reg_751;

assign tmp_9_fu_905_p3 = {{tmp_fu_901_p1}, {5'd0}};

assign tmp_9_mid1_fu_1209_p3 = {{tmp_48_fu_1205_p1}, {5'd0}};

assign tmp_9_mid2_fu_1217_p3 = ((exitcond9_mid1_reg_2505[0:0] === 1'b1) ? tmp_9_mid1_fu_1209_p3 : tmp_9_mid_fu_1179_p3);

assign tmp_9_mid_fu_1179_p3 = ((tmp_22_reg_2488[0:0] === 1'b1) ? 11'd0 : tmp_9_reg_2444);

assign tmp_fu_901_p1 = ap_phi_mux_n_phi_fu_733_p4[5:0];

assign tmp_s_fu_850_p1 = i_reg_662;

assign w_index_0_1_fu_1518_p2 = (15'd3 + tmp_15_fu_1507_p2);

assign w_index_0_2_fu_1939_p2 = (15'd6 + tmp_15_reg_2695_pp0_iter3_reg);

assign w_index_1_1_fu_1611_p2 = (15'd4 + tmp_15_reg_2695);

assign w_index_1_2_fu_1633_p2 = (15'd7 + tmp_15_reg_2695);

assign w_index_1_fu_1577_p2 = (15'd1 + tmp_15_reg_2695);

assign w_index_2_1_fu_1729_p2 = (15'd5 + tmp_15_reg_2695);

assign w_index_2_2_fu_1846_p2 = (15'd8 + tmp_15_reg_2695);

assign w_index_2_fu_1719_p2 = (15'd2 + tmp_15_reg_2695);

assign x2_cast_fu_2192_p1 = x2_reg_762;

assign x_3_fu_2202_p2 = (x2_reg_762 + 2'd1);

assign x_4_fu_859_p2 = (2'd1 + ap_phi_mux_x_phi_fu_688_p4);

assign x_4_mid1_fu_971_p2 = (ap_phi_mux_x_phi_fu_688_p4 ^ 2'd2);

assign x_cast2_mid2_cast_fu_1113_p1 = x_cast2_mid2_fu_1107_p3;

assign x_cast2_mid2_fu_1107_p3 = ((exitcond_flatten_reg_2463[0:0] === 1'b1) ? x_4_reg_2432 : x_reg_684);

assign x_cast3_fu_855_p1 = ap_phi_mux_x_phi_fu_688_p4;

assign x_cast3_mid2_cast_fu_1117_p1 = x_cast2_mid2_fu_1107_p3;

assign y3_cast_fu_2208_p1 = y3_reg_773;

assign y_2_fu_1015_p2 = (2'd1 + y_mid_fu_963_p3);

assign y_3_fu_2218_p2 = (y3_reg_773 + 2'd1);

assign y_cast2_fu_865_p1 = ap_phi_mux_y_phi_fu_711_p4;

assign y_cast2_mid1_fu_1142_p1 = y_2_reg_2482;

assign y_cast_mid2_cast_fu_1043_p1 = y_cast_mid2_fu_1035_p3;

assign y_cast_mid2_fu_1035_p3 = ((exitcond_flatten_mid_fu_1009_p2[0:0] === 1'b1) ? y_2_fu_1015_p2 : y_mid_fu_963_p3);

assign y_mid_fu_963_p3 = ((exitcond_flatten_fu_957_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_y_phi_fu_711_p4);

always @ (posedge ap_clk) begin
    tmp_9_reg_2444[4:0] <= 5'b00000;
    x_cast2_mid2_cast_reg_2544[9:2] <= 8'b00000000;
    tmp_25_1_cast_mid2_c_reg_2550[9:2] <= 8'b00000000;
    tmp_25_2_cast_mid2_reg_2601[9:3] <= 7'b0000000;
    p_Val2_3_cast_reg_3149[13:9] <= 5'b00000;
    tmp14_cast_reg_3154[10] <= 1'b0;
    tmp_19_reg_3159[12:9] <= 4'b0000;
    x2_cast_reg_3164[4:2] <= 3'b000;
end

endmodule //perform_conv
